{"version":3,"sources":["utils/API.js","pages/welcome.js","components/ItemCard/index.js","pages/profile.js","utils/chatContext.js","components/MatchCard/index.js","utils/firebase.js","components/MatchesSideBar/index.js","components/ChatMessage/index.js","components/ChatRoom/index.js","pages/chat.js","pages/createItem.js","components/SwipingCard/index.js","components/DistanceSlider/index.js","pages/swipping.js","components/Navbar/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["id","axios","get","userData","post","itemData","userID","userId","put","itemId","matchInfo","matchData","console","log","localStorage","setItem","JSON","stringify","delete","Welcome","useState","redirect","setRedirect","setUserID","googleSuccess","response","a","userObj","profileObj","googleId","user","email","firstName","givenName","lastName","familyName","image","imageUrl","listedItems","API","then","res","data","length","catch","error","className","motion","h1","animate","y","opacity","initial","transition","delay","duration","type","stiffness","img","rotateZ","scale","whileHover","src","alt","class","push","to","clientId","process","buttonText","onSuccess","onFailure","alert","cookiePolicy","isSignedIn","render","renderProps","large","node","style","marginRight","waves","onClick","h2","div","height","h4","x","ItemCard","props","m","s","width","imageURL","lineHeight","paddingLeft","fontFamily","fontWeight","fontStyle","fontSize","color","itemName","itemDescription","href","data-tip","place","effect","results","loadItems","backgroundColor","Profile","usersItemList","setUsersItemList","setMatchList","rating","setUserData","setImageArray","useParams","userRating","setUserRating","matchArray","loadImages","tempArray","forEach","item","i","matchResponse","item1Owner","itemInfo","userItemId","item1Id","userItemPhoto","item1Photo","userItemName","item1Name","otherItemId","item2Id","otherUser","item2Owner","otherItemImage","item2Photo","otherItemName","item2Name","useEffect","newUser","ratingCount","Math","round","marginTop","Array","fill","map","el","key","floating","paddingTop","paddingBottom","maxHeight","overflowY","index","_id","chatContext","React","createContext","matchId","recentText","setChat","setNewText","MatchCard","itemIds","useContext","chatId","currentChatStyle","setCurrentChatStyle","openInfoModal","setOpenInfoModal","activateInfoModal","closeInfoModal","allMatches","yourImageUrl","newText","open","actions","options","onCloseStart","modal","firebaseConfig","apiKey","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","storage","firestore","MatchesSideBar","matchList","setAllMatches","noChats","setNoChats","item1NewText","getCollectionsMostRecents","item2NewText","newArray","collection","orderBy","limit","returns","_delegate","_snapshot","docChanges","latestText","doc","partialValue","mapValue","fields","text","stringValue","textTime","createdAt","timestampValue","sortedList","sort","b","dateA","Date","fixed","trigger","match","dismissible","ChatMessage","message","sentFromid","sentFromPhoto","messageClass","ChatRoom","messagesRef","setMessagesRef","query","useCollectionData","idField","messages","formValue","setFormValue","dummy","useRef","userItem","setUserItem","otherItem","setOtherItem","messagesEndRef","createRef","openRateModal","setOpenRateModal","setRating","photoURL","setTimeout","current","scrollIntoView","behavior","sendMessage","e","preventDefault","add","FieldValue","serverTimestamp","sentToid","setToPhoto","emptySymbol","fullSymbol","onChange","userResponse","ratingArray","newUserRating","window","location","reload","msg","ref","onSubmit","value","required","target","delResponse","deleteItem","updateRes","ChatApp","setChatId","setRecentText","notNewText","setNotNewText","Provider","floor","random","Item","reward","setReward","descriptionState","setDescriptionState","nameState","setNameState","setImage","setImageURL","setButtonText","userLocation","setUserLocation","wait","setWait","saveUserLocation","position","coords","latitude","longitude","document","getElementById","addEventListener","event","navigator","geolocation","getCurrentPosition","fileUploadHandler","Compressor","quality","success","result","randomNumber","name","on","snapshot","child","getDownloadURL","url","imageName","splitURL","split","newImageName","newURL","replace","newItem","description","itemPrice","itemOwner","likesFromItems","likesItems","seenItems","itemLocation","itemResponse","updatedUser","saveToDatabase","err","label","action","files","placeholder","maxWidth","desc","active","SwipingCard","draggable","DistanceSlider","distance","Handle","Slider","marks","0","50","min","max","defaultValue","distanceBoundary","handle","dragging","restProps","prefixCls","overlay","visible","placement","onAfterChange","setDistanceBoundary","preventFirstRender","Swipping","startingDragPoint","notUserItems","setNotUserItems","currentItem","setCurrentItem","noMoreItems","setNoMoreItems","activateCheckMark","setActivateCheckMark","activateRedXMark","setActivateRedXMark","imageNumber","setImageNumber","itIsAMatch","setItIsAMatch","modalMatchImage1","setModalMatchImage1","modalMatchImage2","setModalMatchImage2","Promise","resolve","reject","pos","getCoords","userItemsResponse","z","newCoords","notUserItemsArray","filter","p","splice","q","includes","unshift","userItemRes","sortedNotUserItems","v","notUserLat","notUserLong","userLat","userLong","getDistanceFromLatLonInKm","distanceResponse","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","sin","cos","c","atan2","sqrt","d","deg","PI","useMotionValue","background","useTransform","processDragInfo","userItemResponse","updatedItemData","currentItemResponse","updatedItemData1","item2Read","matchRes","l","drag","dragConstraints","left","right","onDragStart","info","point","onDragEnd","xl","rotate","CustomNavbar","centerLogo","setCenterLogo","deleteNavbarLinks","setDeleteNavbarLinks","pathname","useLocation","pathway","checkForNewTexts","trueCount","setInterval","alignLinks","brand","centerChildren","menuIcon","Badge","variant","edge","inDuration","onCloseEnd","onOpenEnd","onOpenStart","outDuration","preventScrolling","tooltip","alt-text","CustomFooter","copyrights","App","openSwapModal","setOpenSwapModal","openMatchModal","setOpenMatchModal","modalImage","setModalImage","modalID","setModalID","deletedItemUserId","setDeletedItemUserId","matchPutResponse","exact","path","component","createItem","Chat","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","StrictMode","URL","origin","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.343caf25.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  getUser: function(id) {\r\n    return axios.get(\"/api/users/\" + id);\r\n  },\r\n\r\n  saveUser: function(userData) {\r\n    return axios.post(\"/api/users\", userData);\r\n  },\r\n\r\n  saveItem: function(itemData) {\r\n    return axios.post(\"/api/items\", itemData)\r\n  },\r\n\r\n  getUserItems: function(userID) {\r\n    return axios.get(\"/api/items/user/\" + userID)\r\n  },\r\n\r\n  getAllItems: function() {\r\n    return axios.get(\"/api/items/\")\r\n  },\r\n\r\n  updateUser: function(userId, userData) {\r\n    return axios.put(\"/api/users/\" + userId, userData)\r\n  },\r\n\r\n  updateItem: function(itemId, itemData) {\r\n    return axios.put(\"/api/items/\" + itemId, itemData)\r\n  },\r\n\r\n  getItem: function(itemId) {\r\n    return axios.put(\"/api/items/\" + itemId)\r\n  },\r\n\r\n  getAllMatches: function() {\r\n    return axios.get(\"/api/matches/\")\r\n  },\r\n\r\n  postMatch: function(matchInfo) {\r\n    return axios.post(\"/api/matches\", matchInfo)\r\n  },\r\n\r\n  getUserMatches: function(id) {\r\n    return axios.get(\"/api/matches/user/\" + id)\r\n  },\r\n\r\n  updateUserMatch: function(id, matchData) {\r\n    return axios.put(\"/api/matches/\" + id, matchData)\r\n  },\r\n\r\n  handleUseItem: function(id) {\r\n    console.log(id)\r\n    localStorage.setItem('itemData', JSON.stringify(id))\r\n  },\r\n\r\n  getMatch: function(id) {\r\n    return axios.get(\"/api/matches/\" + id)\r\n  },\r\n\r\n  deleteMatchesForItem: function(id) {\r\n    return axios.delete(\"/api/matches/all/\" + id)\r\n  },\r\n\r\n  deleteItem: function(id) {\r\n    return axios.delete(\"/api/items/\" + id)\r\n  },\r\n\r\n  deleteMatch: function(id) {\r\n    return axios.delete(\"/api/matches/\" + id)\r\n  }, \r\n\r\n  getAllCloseItems: function(coordinates) {\r\n    return axios.get(\"/api/items/location/\" + coordinates)\r\n  }\r\n  \r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"materialize-css\";\r\n// import \"./style.css\";\r\nimport \"./welcomeStyle.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Button } from \"react-materialize\";\r\n\r\nfunction Welcome() {\r\n\r\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconst [redirect, setRedirect] = useState(false);\r\nconst [userID, setUserID] = useState('')\r\n\r\nconst googleSuccess = async (response) => {\r\n    const userObj = response.profileObj\r\n    setUserID(userObj.googleId)\r\n    const user = {\r\n        email: userObj.email,\r\n        firstName: userObj.givenName,\r\n        lastName: userObj.familyName,\r\n        image: userObj.imageUrl,\r\n        googleId: userObj.googleId,\r\n        listedItems: []\r\n    }\r\n    API.getUser(userObj.googleId).then(res => {\r\n        if (res.data.length > 0) {\r\n            setRedirect(true)\r\n        }\r\n        else {\r\n            API.saveUser(user)\r\n            setRedirect(true)\r\n        }\r\n    }).catch(error => console.log(error))\r\n\r\n}\r\n\r\nconst googleFailure = (response) => {\r\nconsole.log(\"Google Sign in was unsuccessful\");\r\nalert(\"please try logging in again\");\r\nconsole.log(response);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"hero-image\">\r\n      <div className=\"container center\">\r\n        <div className=\"row opening\">\r\n          <motion.h1\r\n            animate={{ y: 0, opacity: 1 }}\r\n            initial={{ y: -250, opacity: 0 }}\r\n            transition={{\r\n              delay: 0.5,\r\n              duration: 1,\r\n              type: \"spring\",\r\n              stiffness: 150,\r\n            }}\r\n          >\r\n            Recycle your life!\r\n          </motion.h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <motion.img\r\n            animate={{ rotateZ: 1080, opacity: 1, scale: 1 }}\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            transition={{ delay: 0.2, duration: 1.8 }}\r\n            whileHover={{ rotateZ: 180 }}\r\n            src=\"./../img/swapifyLogo-S-vector.png\"\r\n            alt=\"Swapify S Logo\"\r\n            class=\"responsive-img\"\r\n          />\r\n          {/* <motion.img\r\n                      animate={{ x: 0, opacity: 1 }}\r\n                      initial={{ opacity: 0 }}\r\n                      transition={{ delay: 2.5, duration: 0.5 }}\r\n                      src=\"./../img/wapifyLogoCenter-vector.png\"\r\n                      alt=\"Swapify Logo\"\r\n                      class=\"responsive-img\"\r\n                  /> */}\r\n        </div>\r\n\r\n        <div className=\"row login\">\r\n          {redirect ? <Redirect push to={`/profile/${userID}`} /> : null}\r\n          <GoogleLogin\r\n            className=\"loginBtn\"\r\n            clientId={googleClientId}\r\n            buttonText=\"Get Swapp'n!\"\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            isSignedIn={false}\r\n            render={(renderProps) => (\r\n              <motion.a\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0, scale: 0 }}\r\n                transition={{ delay: 2, duration: 1 }}\r\n              >\r\n                <Button\r\n                  large\r\n                  className=\"loginBtn z-depth-3\"\r\n                  node=\"a\"\r\n                  style={{\r\n                    marginRight: \"5px\",\r\n                  }}\r\n                  waves=\"light\"\r\n                  onClick={renderProps.onClick}\r\n                >\r\n                  Start Swap'n!\r\n                </Button>\r\n              </motion.a>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div className=\"container center \">\r\n      <div className=\"row howTo\">\r\n        <motion.h2\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          transition={{ delay: 2.5, duration: 2 }}\r\n        >\r\n          How Swapify works:{\" \"}\r\n        </motion.h2>\r\n      </div>\r\n      <motion.div\r\n        className=\"row howToRow\"\r\n        animate={{ opacity: 1 }}\r\n        initial={{ opacity: 0 }}\r\n        transition={{ delay: 2.5, duration: 2 }}\r\n        whileHover={{}}\r\n      >\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s12 center symbol1\">\r\n            <motion.img\r\n              src=\"./../img/profileSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 s12 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how1\"\r\n            >\r\n              Sign into your Profile\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s12 center symbol2\">\r\n            <motion.img\r\n              src=\"./../img/addItemSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 s12 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 1 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how2\"\r\n            >\r\n              Add a new item to swap\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s12 center symbol3\">\r\n            <motion.img\r\n              src=\"./../img/swipeSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 s12 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how3\"\r\n            >\r\n              Browse & swipe to match\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s12 center symbol4\">\r\n            <motion.img\r\n              src=\"./../img/swapSymbol2.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 s12 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how4\"\r\n            >\r\n              Chat and swap with matches\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  </>\r\n);\r\n}\r\n\r\nexport default Welcome;","import React from \"react\";\r\nimport { Button, Card, CollectionItem, Col, Row } from \"react-materialize\";\r\nimport API from \"../../utils/API\";\r\nimport ReactTooltip from 'react-tooltip'; \r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./style.css\";\r\n\r\nconst ItemCard = (props) => {\r\n    return (\r\n        <CollectionItem className=\"valign-wrapper\" >\r\n            <Row>\r\n                <Col m={2} s={2}>\r\n                    <img\r\n                        alt=\"\"\r\n                        className=\"circle\"\r\n                        style={{ height: \"150px\", width: \"150px\" }}\r\n                        src={props.imageURL}\r\n                    />\r\n                </Col>\r\n                <Col m={6} s={6} >\r\n                    <span\r\n                        className=\"title\"\r\n                        style={{\r\n                            height: \"70px\",\r\n                            lineHeight: \"70px\",\r\n                            paddingLeft: \"0px\",\r\n                            fontFamily: \"proxima-nova, sans-serif\",\r\n                            fontWeight: \"700\",\r\n                            fontStyle: \"normal\",\r\n                            fontSize: \"20px\",\r\n                            color: \"#025159\",\r\n                        }}\r\n                    >\r\n                        {props.itemName}\r\n                    </span>\r\n\r\n                    <span\r\n                        className=\"description\"\r\n                        style={{\r\n                            height: \"70px\",\r\n                            lineHeight: \"70px\",\r\n                            paddingLeft: \"20px\",\r\n                            fontFamily: \"proxima-nova, sans-serif\",\r\n                            fontWeight: \"100\",\r\n                            fontStyle: \"normal\",\r\n                            color: \"#025159\",\r\n                        }}\r\n                    >\r\n                        {props.itemDescription}\r\n                    </span>\r\n                </Col>\r\n\r\n\r\n                <Col m={1} s={1}>\r\n                    <a\r\n                        className=\"secondary-content\"\r\n                        href={`/swipping/${props.id}/${props.userData.googleId}`}\r\n                    >\r\n                        <img\r\n                            src=\"/img/S-logoBtn-vector.png\"\r\n                            onClick={() => API.handleUseItem(props.id)}\r\n                            style={{ height: \"65px\" }}\r\n                            alt=\"swap logo\"\r\n                            data-tip=\"Swap your Item\"\r\n                        />\r\n                        <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\" />\r\n\r\n                    </a>\r\n                </Col>\r\n                <Col m={1} s={6}>\r\n                    <Button\r\n                        className=\"btn-floating btn-large\"\r\n                        onClick={() => {\r\n                            API.deleteItem(props.id).then((results) => {\r\n                                props.loadItems();\r\n                            });\r\n                        }}\r\n                        style={{ backgroundColor: \"#F20505\" }}\r\n                        data-tip=\"Delete Item\"\r\n                    >\r\n                        <i className=\"material-icons\">delete</i>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </CollectionItem>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport ItemCard from \"../components/ItemCard\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Collection\r\n} from \"react-materialize\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n// import \"./style.css\";\r\nimport \"./profileStyle.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n//document.body.style = \"background: -webkit-gradient(linear, top, bottom, from(#003399), to(#6699cc));background: -webkit-linear-gradient(#025159, #03A696);background: linear-gradient(#025159, #03A696);zoom: 1;margin: 0;padding-top: 2%;padding-bottom: 3%;background-attachment: fixed;\"\r\n\r\nfunction Profile() {\r\n  const [usersItemList, setUsersItemList] = useState([]);\r\n  const [matchList, setMatchList] = useState([]);\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    googleId: \"\",\r\n    image: \"\",\r\n    lastName: \"\",\r\n    listedItems: [],\r\n    rating: [],\r\n  });\r\n  const [imageArray, setImageArray] = useState([\"\"]);\r\n  const { id } = useParams();\r\n  const [userRating, setUserRating] = useState(0);\r\n\r\n  let matchArray = [];\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadImages();\r\n    API.getUser(id).then((res) => {\r\n      const newUser = {\r\n        email: res.data[0].email,\r\n        firstName: res.data[0].firstName,\r\n        googleId: res.data[0].googleId,\r\n        image: res.data[0].image,\r\n        lastName: res.data[0].lastName,\r\n        listedItems: res.data[0].listedItems,\r\n        rating: res.data[0].rating,\r\n      };\r\n      setUserData(newUser);\r\n      if (res.data[0].rating.length === 0) {\r\n        setUserRating(0);\r\n      } else {\r\n        let ratingCount = 0;\r\n        for (let i = 0; i < res.data[0].rating.length; i++) {\r\n          ratingCount = ratingCount + res.data[0].rating[i];\r\n        }\r\n        setUserRating(Math.round(ratingCount / res.data[0].rating.length));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadImages();\r\n  }, [userData]);\r\n\r\n  function loadImages() {\r\n    let tempArray = [];\r\n    usersItemList.forEach((item, i) => {\r\n      tempArray.push(item.imageURL);\r\n    });\r\n    if (usersItemList.length == 0) {\r\n      return;\r\n    }\r\n    console.log(tempArray);\r\n    setImageArray(tempArray);\r\n  }\r\n\r\n  function loadItems() {\r\n    if (userData === null) {\r\n      //   setRedirect(true)\r\n    }\r\n    API.getUserItems(userData.googleId).then((response) => {\r\n      setUsersItemList(response.data);\r\n    });\r\n    API.getUserMatches(userData.googleId).then((matchResponse) => {\r\n      matchResponse.data.forEach((item) => {\r\n        if (item.item1Owner === userData.googleId) {\r\n          const itemInfo = {\r\n            userItemId: item.item1Id,\r\n            userId: item.item1Owner,\r\n            userItemPhoto: item.item1Photo,\r\n            userItemName: item.item1Name,\r\n            otherItemId: item.item2Id,\r\n            otherUser: item.item2Owner,\r\n            otherItemImage: item.item2Photo,\r\n            otherItemName: item.item2Name,\r\n          };\r\n          matchArray.push(itemInfo);\r\n          if (matchResponse.data.length === matchArray.length) {\r\n            setMatchList(matchArray);\r\n          }\r\n        } else {\r\n          const itemInfo = {\r\n            userItemId: item.item2Id,\r\n            userId: item.item2Owner,\r\n            userItemPhoto: item.item2Photo,\r\n            userItemName: item.item2Name,\r\n            otherItemId: item.item1Id,\r\n            otherUser: item.item1Owner,\r\n            otherItemImage: item.item1Photo,\r\n            otherItemName: item.item1Name,\r\n          };\r\n          matchArray.push(itemInfo);\r\n          if (matchResponse.data.length === matchArray.length) {\r\n            setMatchList(matchArray);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleUseItem(id) {\r\n    console.log(id);\r\n    localStorage.setItem(\"itemData\", JSON.stringify(id));\r\n    //  setRedirectToSwipping(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* {redirect ? (<Redirect push to=\"/\" />) : null} */}\r\n\r\n      <div className=\"container center-align\" style={{ marginTop: \"20px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col m12 s12 \">\r\n            <motion.img\r\n              animate={{ y: 1, opacity: 1 }}\r\n              initial={{ y: -50, opacity: 0 }}\r\n              transition={{\r\n                delay: 0.5,\r\n                duration: 0.5,\r\n                // type: \"spring\",\r\n                // stiffness: 50,\r\n              }}\r\n              alt=\"\"\r\n              className=\"circle z-depth-3\"\r\n              style={{\r\n                height: \"150px\",\r\n                width: \"150px\",\r\n                marginTop: \"50px\",\r\n              }}\r\n              src={userData.image}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col m12 s12 center-align\" data-tip=\"Your Swapify rating\">\r\n            <motion.div\r\n              animate={{ opacity: 1 }}\r\n              initial={{ opacity: 0 }}\r\n              transition={{ duration: .2, delay: 0.2 }}\r\n              className=\"col m12 s12 center-align\">\r\n              {Array(userRating)\r\n                .fill()\r\n                .map((el, i) => (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    key={i}\r\n                    style={{ color: \"#F25D27\" }}\r\n                  >\r\n                    star\r\n                </i>\r\n                ))}\r\n              {Array(5 - userRating)\r\n                .fill()\r\n                .map((el, i) => (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    key={i}\r\n                    style={{ color: \"#F25D27\" }}\r\n                  >\r\n                    star_border\r\n                </i>\r\n                ))}\r\n            </motion.div>\r\n          \r\n            <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\"/>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <Row className=\"valign-wrapper\">\r\n        </Row>\r\n        <Row>\r\n          <div className=\"col m12 s12 \">\r\n            <motion.h2\r\n              animate={{ opacity: 1 }}\r\n              initial={{ opacity: 0 }}\r\n              transition={{ duration: 1 }}\r\n              style={{ color: \"#03A696\" }}\r\n              className=\"userName\"\r\n            >\r\n\r\n              {userData.firstName} {userData.lastName}\r\n            </motion.h2>\r\n          </div>\r\n        </Row>\r\n      \r\n      <Row className=\"valign-wrapper\">\r\n        <Col m={8} s={8} className=\"right-align\">\r\n          <h4 style={{ color: \"#025159\" }}>Add Item</h4>\r\n        </Col>\r\n        <Col m={6} s={6} className=\"left-align\">\r\n          <Button\r\n            floating={true}\r\n            large={true}\r\n            style={{ backgroundColor: \"#F25D27\" }}\r\n          >\r\n            <Link to={`/createItem/${userData.googleId}`}>\r\n              <i className=\"material-icons\">add</i>\r\n            </Link>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: \"10px\" }}>\r\n        <h3\r\n          style={{\r\n            fontFamily: \"lemon\",\r\n            color: \"#03A696\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          Your Items\r\n          </h3>\r\n\r\n        <Collection style={{ maxHeight: \"1000px\", overflowY: \"scroll\" }}>\r\n          {usersItemList.map((item, index) => (\r\n            <ItemCard\r\n              key={index}\r\n              loadItems={loadItems}\r\n              imageURL={item.imageURL}\r\n              itemName={item.itemName}\r\n              id={item._id}\r\n              itemDescription={item.itemDescription}\r\n              userData={userData}\r\n            />\r\n\r\n            // <a href=\"/swipping\" ><button onClick={() => handleUseItem(item._id)} itemId={item._id}>{item.itemName}</button></a>\r\n          ))}\r\n        </Collection>\r\n      </Row>\r\n\r\n      <Row style={{ height: \"400px\" }}></Row>\r\n    </div>\r\n\r\n      {/* <Carousel>\r\n                {usersItemList.map((item, index) => (\r\n\r\n                    <CarouselCard key={index} loadItems={loadItems} imageURL={item.imageURL} itemName={item.itemName} id={item._id} itemDescription={item.itemDescription} />\r\n                ))}\r\n\r\n            </Carousel> */}\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst chatContext = React.createContext({\r\n  matchId: \"\",\r\n  recentText: \"\",\r\n  setChat: () => {},\r\n  setNewText: () => {}\r\n});\r\n\r\nexport default chatContext;\r\n","\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, CollectionItem, Modal, Row, Col } from 'react-materialize';\r\nimport \"./style.css\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport API from \"../../utils/API\";\r\n\r\nconst MatchCard = (props) => {\r\n    const itemIds = {\r\n        matchId: props.matchData.matchId\r\n    }\r\n    const { setChat, chatId } = useContext(chatContext)\r\n    const [ currentChatStyle, setCurrentChatStyle ] = useState(false)\r\n    const [ userRating, setUserRating ] = useState(0)\r\n    const [ openInfoModal, setOpenInfoModal ] = useState(false)\r\n\r\n    useEffect(() => {\r\n       setChat({matchId: props.allMatches.data[0]._id})\r\n       API.getUser(props.matchData.otherUser).then((res) => {\r\n           if (res.data[0].rating.length === 0) {\r\n               setUserRating(0)\r\n           }\r\n           else {\r\n               let ratingCount = 0\r\n               for (let i = 0; i < res.data[0].rating.length; i++) {\r\n                   ratingCount = ratingCount + res.data[0].rating[i]\r\n               }\r\n               setUserRating(Math.round(ratingCount / res.data[0].rating.length))\r\n           }\r\n       })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (chatId.matchId === props.matchData.matchId) {\r\n            setCurrentChatStyle(true)\r\n        }\r\n        else {\r\n            setCurrentChatStyle(false)\r\n        }\r\n    }, [chatId])\r\n\r\n    function activateInfoModal() {\r\n        setOpenInfoModal(true)\r\n        console.log(props.matchData)\r\n    }\r\n\r\n    function closeInfoModal() {\r\n        setOpenInfoModal(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* highlights currently selected chat */}\r\n            {currentChatStyle ? (\r\n                <CollectionItem className=\"avatar valign-wrapper\" style={{backgroundColor:\"#D3EEE3\"}}>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle userItemPicture\"\r\n                    src={props.yourImageUrl}\r\n                /></a>\r\n                <a className=\"noHover\"><i className=\"material-icons swapSymbol noHover\">autorenew</i></a>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle itemPicture noHover\"\r\n                    src={props.imageURL}\r\n                /><i className=\"material-icons ratingStar noHover\">star</i><p className=\"ratingNumber noHover\">{userRating}</p></a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    <a className=\"btn-floating btn-large infoButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {activateInfoModal()}} ><i className=\"material-icons\">info</i></a>\r\n                </a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    {props.matchData.newText ? (<a className=\"btn-floating btn-large chatButton pulse\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>) : (<a className=\"btn-floating btn-large chatButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>)}\r\n                    \r\n                </a>\r\n            </CollectionItem>\r\n            ) : (\r\n                <CollectionItem className=\"avatar valign-wrapper\">\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle userItemPicture \"\r\n                    src={props.yourImageUrl}\r\n                /></a>\r\n                <a className=\"noHover\"><i className=\"material-icons swapSymbol noHover\">autorenew</i></a>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle itemPicture noHover\"\r\n                    src={props.imageURL}\r\n                /><i className=\"material-icons ratingStar noHover\">star</i><p className=\"ratingNumber\">{userRating}</p></a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    <a className=\"btn-floating btn-large infoButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {activateInfoModal()}} ><i className=\"material-icons\">info</i></a>\r\n                </a>\r\n                <a className=\"secondary-content\">\r\n                    {props.matchData.newText ? (<a className=\"btn-floating btn-large chatButton pulse\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>) : (<a className=\"btn-floating btn-large chatButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>)}\r\n                    \r\n                </a>\r\n            </CollectionItem>\r\n            )}\r\n            <Modal\r\n                open={openInfoModal}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    onCloseStart: closeInfoModal\r\n                }}\r\n                >\r\n                <Row>\r\n                    <Col s={12} m={4}>\r\n                        <img src={props.matchData.userItemPhoto} className=\"circle modalUserImage\"></img>\r\n                        <h5>{props.matchData.userItemName}</h5>\r\n                    </Col>\r\n                    <Col s={12} m={4}>\r\n                        <br></br><br></br>\r\n                        <img src=\"./../../img/swapItemIcon.png\" className=\"swapItemIcon\"></img>\r\n                        <br></br><br></br>\r\n                    </Col>\r\n                    <Col s={12} m={4}>\r\n                        <img src={props.matchData.otherItemImage} className=\"circle modalUserImage\"></img>\r\n                        <h5>{props.matchData.otherItemName}</h5>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row>\r\n                    <Col s={6}>\r\n                    <h5>{props.matchData.userItemName}</h5>\r\n                    </Col>\r\n                    <Col s={6}>\r\n                    <h5>{props.matchData.otherItemName}</h5>\r\n                    </Col>\r\n                </Row> */}\r\n                <a><Button modal=\"close\" className=\"closeModalButton\" onClick={closeInfoModal}>Close</Button></a>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MatchCard;","import firebase from \"firebase/app\"\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n    projectId: \"swapify-85d2c\",\r\n    storageBucket: \"swapify-85d2c.appspot.com\",\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst storage = firebase.storage()\r\nconst firestore = firebase.firestore()\r\n\r\nexport { storage, firebase, firestore, firebase as default} ","import React, { useState, useEffect, useContext } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Collection, SideNav, Modal, Button } from 'react-materialize';\r\nimport MatchCard from '../MatchCard'\r\nimport { firestore } from \"../../utils/firebase\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function MatchesSideBar(props) {\r\n    const [usersItemList, setUsersItemList] = useState([]);\r\n    const [matchList, setMatchList] = useState([])\r\n    const [allMatches, setAllMatches] = useState([])\r\n    const [noChats, setNoChats] = useState(false)\r\n    const userData = props.userData\r\n    const { recentText } = useContext(chatContext)\r\n    let matchArray = []\r\n\r\n    useEffect(() => {\r\n        API.getUserItems(userData.googleId).then((response) => {\r\n            setUsersItemList(response.data)\r\n        })\r\n        API.getUserMatches(userData.googleId).then((matchResponse) => {\r\n            if (matchResponse.data.length === 0) {\r\n                setNoChats(true)\r\n            }\r\n            setAllMatches(matchResponse)\r\n            matchResponse.data.forEach(item => {\r\n                if (item.item1Owner === userData.googleId) {\r\n                    const itemInfo = {\r\n                        userItemId: item.item1Id,\r\n                        userId: item.item1Owner,\r\n                        userItemPhoto: item.item1Photo,\r\n                        userItemName: item.item1Name,\r\n                        otherItemId: item.item2Id,\r\n                        otherUser: item.item2Owner,\r\n                        otherItemImage: item.item2Photo,\r\n                        otherItemName: item.item2Name,\r\n                        matchId: item._id,\r\n                        newText: item.item1NewText\r\n                    }\r\n                    matchArray.push(itemInfo)\r\n                    if (matchResponse.data.length === matchArray.length) {\r\n                        getCollectionsMostRecents(matchArray).then((res) => {\r\n                            setMatchList(res)\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n                    const itemInfo = {\r\n                        userItemId: item.item2Id,\r\n                        userId: item.item2Owner,\r\n                        userItemPhoto: item.item2Photo,\r\n                        userItemName: item.item2Name,\r\n                        otherItemId: item.item1Id,\r\n                        otherUser: item.item1Owner,\r\n                        otherItemImage: item.item1Photo,\r\n                        otherItemName: item.item1Name,\r\n                        matchId: item._id,\r\n                        newText: item.item2NewText\r\n                    }\r\n                    matchArray.push(itemInfo)\r\n                    if (matchResponse.data.length === matchArray.length) {\r\n                        getCollectionsMostRecents(matchArray).then((res) => {\r\n                            setMatchList(res)\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }, [recentText, props])\r\n\r\n    \r\n\r\n    const getCollectionsMostRecents = async(newArray) => {\r\n        if (newArray) {\r\n        for (let i = 0; i < newArray.length; i++) {\r\n            const returns = await firestore.collection(`${newArray[i].matchId}`).orderBy(\"createdAt\", 'desc').limit(1).get()\r\n            if (returns._delegate._snapshot.docChanges[0]) {\r\n                newArray[i].latestText = returns._delegate._snapshot.docChanges[0].doc.data.partialValue.mapValue.fields.text.stringValue\r\n                newArray[i].textTime = returns._delegate._snapshot.docChanges[0].doc.data.partialValue.mapValue.fields.createdAt.timestampValue\r\n            }\r\n        }\r\n        let sortedList =  newArray.sort(function compare(a, b) {\r\n            var dateA = new Date(a.textTime);\r\n            var dateB = new Date(b.textTime);\r\n            return dateB - dateA;\r\n        });\r\n        return sortedList\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        getCollectionsMostRecents(matchList).then((res) => {\r\n            setMatchList(res)\r\n        })\r\n\r\n    }, [recentText])\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <SideNav\r\n                fixed={true}\r\n                trigger={<Button floating={true} large={true} className=\"chatSideNavTrigger\"><i class=\"material-icons\">chat</i></Button>}>\r\n                <Collection className=\"chatCollection\">\r\n                    {matchList.map(match => (\r\n                        <MatchCard yourImageUrl={match.userItemPhoto} imageURL={match.otherItemImage} matchData={match} allMatches={allMatches}/>\r\n                    ))}\r\n                </Collection>\r\n            </SideNav>\r\n\r\n            {/* No chats Modal */}\r\n            <Modal\r\n                open={noChats}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                dismissible: false\r\n                }}>\r\n                <h3>No Chats!</h3>\r\n                <br></br>\r\n                <div>You don't have any open chats!</div>\r\n                <div>Go make some matches first!</div>\r\n                <br></br>\r\n                <a href={`/profile/${userData.googleId}`}><Button>Go Back</Button></a>\r\n            </Modal>\r\n        </div>       \r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function ChatMessage(props) {\r\n    const userData = props.userData\r\n    const { text, sentFromid, sentFromPhoto } = props.message;\r\n    const messageClass = sentFromid === userData.googleId ? 'sent' : 'received';\r\n\r\n\r\n    return (\r\n        <div className={`message ${messageClass}`}>\r\n            <img className='itemPhoto' src={sentFromPhoto} alt=\"photo of item\"/>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\nimport { Col, Row, Button, Modal } from 'react-materialize';\r\nimport API from '../../utils/API'\r\nimport { firebase, firestore } from \"../../utils/firebase\"\r\nimport ChatMessage from \"../ChatMessage\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport \"./style.css\"\r\nimport Rating from 'react-rating'\r\n\r\nexport default function ChatRoom(props) {\r\n    const userData = props.userData\r\n    const { chatId, setNewText } = useContext(chatContext)\r\n    const [messagesRef, setMessagesRef] = useState(firestore.collection('empty'))\r\n    const query = messagesRef.orderBy('createdAt')\r\n    const [messages] = useCollectionData(query, {idField: 'id'})\r\n    const [formValue, setFormValue] = useState('')\r\n    const dummy = useRef()\r\n    const [userItem, setUserItem] = useState({})\r\n    const [otherItem, setOtherItem] = useState({})\r\n    const messagesEndRef = React.createRef()\r\n    const [openRateModal, setOpenRateModal] = useState(false)\r\n    const [rating, setRating] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setMessagesRef(firestore.collection(chatId.matchId || 'empty'))\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                setUserItem({id: matchResponse.data.item1Owner, photoURL: matchResponse.data.item1Photo})\r\n                setOtherItem({id: matchResponse.data.item2Owner, photoURL: matchResponse.data.item2Photo})\r\n            }\r\n            else {\r\n                setUserItem({id: matchResponse.data.item2Owner, photoURL: matchResponse.data.item2Photo})\r\n                setOtherItem({id: matchResponse.data.item1Owner, photoURL: matchResponse.data.item1Photo})\r\n            }\r\n        })\r\n        setTimeout(function () {\r\n            dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n          }, 500)\r\n    }, [chatId])\r\n\r\n\r\n    const sendMessage = async(e) => {\r\n        e.preventDefault();\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                const matchData = {\r\n                    item2NewText: true,\r\n                    item1NewText: false\r\n                }\r\n                API.updateUserMatch(chatId.matchId, matchData)\r\n            }\r\n            else {\r\n                const matchData = {\r\n                    item1NewText: true,\r\n                    item2NewText: false\r\n                }\r\n                API.updateUserMatch(chatId.matchId, matchData)\r\n            }\r\n        })\r\n\r\n\r\n        setNewText(formValue)\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            sentFromid: userItem.id,\r\n            sentToid: otherItem.id,\r\n            sentFromPhoto: userItem.photoURL,\r\n            setToPhoto: otherItem.photoURL\r\n        })\r\n        setFormValue('')\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    function swapItems() {\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            console.log(matchResponse)\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                API.deleteMatchesForItem(matchResponse.data.item1Id).then((res) => {\r\n                    API.deleteItem(matchResponse.data.item1Id).then((delResponse) => {\r\n                        API.updateItem(matchResponse.data.item2Id, {deleteItem: matchResponse.data.item1Owner}).then((updateRes) => {\r\n                            setOpenRateModal(true)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                API.deleteMatchesForItem(matchResponse.data.item2Id).then((res) => {\r\n                    API.deleteItem(matchResponse.data.item2Id).then((delResponse) => {\r\n                        API.updateItem(matchResponse.data.item1Id, {deleteItem: matchResponse.data.item2Owner}).then((updateRes) => {\r\n                            setOpenRateModal(true)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function deleteMatch() {\r\n        API.deleteMatch(chatId.matchId).then((res) => {\r\n            setOpenRateModal(true)\r\n        })\r\n    }\r\n\r\n    function reloadPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n    function submitRating() {\r\n        API.getUser(otherItem.id).then((userResponse) => {\r\n            const ratingArray = userResponse.data[0].rating\r\n            ratingArray.push(rating)\r\n            const newUserRating = {\r\n                rating: ratingArray\r\n            }\r\n            API.updateUser(otherItem.id, newUserRating).then((res) => {\r\n                window.location.reload();\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"container\">\r\n            {/* Rate User */}\r\n            <Modal\r\n                open={openRateModal}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                dismissible: false\r\n                }}>\r\n                <h3>Match Deleted!</h3>\r\n                <br></br>\r\n                <div>Would you like to rate the other user?</div>\r\n                <br></br>\r\n                <Rating\r\n                    emptySymbol={<i className=\"material-icons\">star_border</i>}\r\n                    fullSymbol={<i className=\"material-icons\">star</i>}\r\n                    onChange={(e) => setRating(e)}\r\n                ></Rating>\r\n                <br></br><br></br>\r\n                <a><Button onClick={submitRating} modal=\"close\">Submit Rating</Button></a>\r\n                <br></br><br></br>\r\n                <a><Button onClick={reloadPage} modal=\"close\">No Thanks</Button></a>\r\n            </Modal>\r\n            <Row className=\"wrapper\">\r\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} userData={userData}/>)}\r\n                <div ref={dummy}></div>\r\n                <div ref={messagesEndRef} />\r\n                <br></br><br></br><br></br><br></br><br></br>\r\n            </Row>\r\n        \r\n        <div className=\"chatControls\">\r\n            <Row>\r\n                <Col s={12}>\r\n                    <form onSubmit={sendMessage}>   \r\n                        <Col s={10}>\r\n                        <input value={formValue} required className=\"chatForm\" onChange={(e) => setFormValue(e.target.value)}/>\r\n                        </Col>\r\n                        <Col s={2}>\r\n                        <button type=\"submit\" className=\"btn-floating btn-large waves-effect waves-light sendButton\"><i className=\"material-icons\">send</i></button>\r\n                        </Col>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col s={6} className='center-align'>\r\n                    <Modal\r\n                        className=\"center-align\"\r\n                        id=\"Modal-Swap\"\r\n                        trigger={<Button node=\"button\" className=\"swapItemsButton\">SWAP ITEMS</Button>}\r\n                    >\r\n                        <h3>Swap Items?</h3>\r\n                        <br></br>\r\n                        <div>If you press confirm your item will be no longer listed on Swapify. Only do this after swapping items.</div>\r\n                        <br></br><br></br>\r\n                        <a><Button onClick={swapItems} modal=\"close\">Confirm</Button></a>\r\n                    </Modal>\r\n                </Col>\r\n                <Col s={6} className='center-align'>\r\n                    <Modal\r\n                        className=\"center-align\"\r\n                        id=\"Modal-Swap\"\r\n                        trigger={<Button node=\"button\" className=\"deleteMatchButton\">DELETE MATCH</Button>}\r\n                    >\r\n                        <h3>Delete Match?</h3>\r\n                        <br></br>\r\n                        <div>If you press confirm your match will be deleted from Swapify.</div>\r\n                        <br></br><br></br>\r\n                        <a><Button onClick={deleteMatch} modal=\"close\">Confirm</Button></a>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { Col, Row} from 'react-materialize';\r\nimport MatchesSideBar from \"../components/MatchesSideBar\"\r\nimport ChatRoom from \"../components/ChatRoom\"\r\nimport API from \"../utils/API\"\r\nimport chatContext from \"../utils/chatContext\";\r\nimport \"./chatStyle.css\"\r\n\r\n\r\nfunction ChatApp() {\r\n\r\n    const [chatId, setChatId] = useState('empty')\r\n    const [recentText, setRecentText] = useState('')\r\n    const [notNewText, setNotNewText] = useState(2)\r\n    const [userData, setUserData] = useState({email: \"\",\r\n        firstName: \"\",\r\n        googleId: \"\",\r\n        image: \"\",\r\n        lastName: \"\",\r\n        listedItems: [],\r\n        rating: []}\r\n    )\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        API.getUser(id).then((res) => {\r\n            const newUser = {\r\n                email: res.data[0].email,\r\n                firstName: res.data[0].firstName,\r\n                googleId: res.data[0].googleId,\r\n                image: res.data[0].image,\r\n                lastName: res.data[0].lastName,\r\n                listedItems: res.data[0].listedItems,\r\n                rating: res.data[0].rating\r\n            }\r\n            setUserData(newUser)\r\n        })\r\n    }, [])\r\n\r\n    function setChat(id) {\r\n        setChatId(id)\r\n        API.getMatch(id.matchId).then((res) => {\r\n            if ((userData.googleId === res.data.item1Owner) && (res.data.item1NewText === true)) {\r\n                const matchData = {\r\n                    item1NewText: false\r\n                }\r\n                API.updateUserMatch(id.matchId, matchData)\r\n                setNotNewText(Math.floor(Math.random() * 100000))\r\n            }\r\n            else if ((userData.googleId === res.data.item2Owner) && (res.data.item2NewText === true)) {\r\n                const matchData = {\r\n                    item2NewText: false\r\n                }\r\n                API.updateUserMatch(id.matchId, matchData)\r\n                setNotNewText(Math.floor(Math.random() * 100000))\r\n            }\r\n        })\r\n    }\r\n\r\n    function setNewText(text) {\r\n        setRecentText(text)\r\n    }\r\n\r\n    return (\r\n        <div className=\"chatBackground\">\r\n        <chatContext.Provider value={{chatId, recentText, setChat, setNewText }}>\r\n            <Row>\r\n                <Col s={0} m={4}>\r\n                    <MatchesSideBar newText={notNewText} userData={userData}/>\r\n                </Col>\r\n                <Col s={12} m={8}>\r\n                    <ChatRoom userData={userData}/>\r\n                </Col>\r\n            </Row>\r\n        </chatContext.Provider>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatApp;","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport { storage } from \"../utils/firebase\";\r\nimport { Redirect, useParams, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Compressor from \"compressorjs\";\r\nimport Confetti from \"react-dom-confetti\";\r\nimport { Col, Row, Textarea, Button } from \"react-materialize\";\r\nimport \"./createItemStyle.css\";\r\n\r\n\r\n\r\nfunction Item() {\r\n  const [reward, setReward] = useState(false);\r\n  const [descriptionState, setDescriptionState] = useState([]);\r\n  const [nameState, setNameState] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [buttonText, setButtonText] = useState(\"Preview\");\r\n  const [userLocation, setUserLocation] = useState([\"\"]);\r\n  const [wait, setWait] = useState(false);\r\n  const { id } = useParams();\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    googleId: \"\",\r\n    image: \"\",\r\n    lastName: \"\",\r\n    listedItems: [],\r\n    rating: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    API.getUser(id).then((res) => {\r\n      const newUser = {\r\n        email: res.data[0].email,\r\n        firstName: res.data[0].firstName,\r\n        googleId: res.data[0].googleId,\r\n        image: res.data[0].image,\r\n        lastName: res.data[0].lastName,\r\n        listedItems: res.data[0].listedItems,\r\n        rating: res.data[0].rating,\r\n      };\r\n      setUserData(newUser);\r\n    });\r\n    if (userData === null) {\r\n      setRedirect(true);\r\n    }\r\n    const fileUpload = document.getElementById(\"fileBox\");\r\n    fileUpload.addEventListener(\"click\", function (event) {});\r\n\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(saveUserLocation);\r\n    } else {\r\n      alert = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n\r\n  function saveUserLocation(position) {\r\n    setUserLocation([position.coords.latitude, position.coords.longitude]);\r\n  }\r\n\r\n  //sets the selectedFile state when a a user drops in a file.\r\n  function handleFileChange(e) {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function handleDescriptionChange(event) {\r\n    const desc = event.target.value;\r\n    setDescriptionState({ ...descriptionState, description: desc });\r\n  }\r\n\r\n  function handleNameChange(event) {\r\n    const name = event.target.value;\r\n    setNameState({ ...nameState, name: name });\r\n  }\r\n\r\n  function previewUploadHandler() {\r\n    if (buttonText === \"Preview\") {\r\n      previewHandler();\r\n      setButtonText(\"Upload\");\r\n    } else {\r\n      fileUploadHandler();\r\n    }\r\n  }\r\n  const fileUploadHandler = () => {\r\n    // Compress image before uploading to firebase\r\n    new Compressor(image, {\r\n      quality: 0.2,\r\n      success(result) {\r\n\r\n        // uploads image to firebase\r\n        const randomNumber = Math.floor(Math.random() * 100000000);\r\n        const uploadTask = storage\r\n          .ref(`images/${randomNumber + image.name}`)\r\n          .put(result);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {},\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(randomNumber + image.name)\r\n              .getDownloadURL()\r\n\r\n              .then(url => {\r\n                saveToDatabase(url, image.name);\r\n                setImageURL(url);\r\n                console.log(\"fileupload handler run\");\r\n                //setButtonText(\"Preview\")\r\n                setReward(!reward);\r\n                setTimeout(() => setWait(true), 3000);\r\n\r\n                // window.location.href=\"/profile\"\r\n              });\r\n          }\r\n        );\r\n      },\r\n      error(err) {\r\n        console.log(err.message);\r\n      },\r\n    });\r\n  };\r\n\r\n  function previewHandler() {\r\n    // Compress image before uploading to firebase\r\n    new Compressor(image, {\r\n      quality: 0.8,\r\n      success(result) {\r\n        // uploads image to firebase\r\n        const randomNumber = Math.floor(Math.random() * 100000000);\r\n        const uploadTask = storage\r\n          .ref(`images/${randomNumber + image.name}`)\r\n          .put(result);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {},\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(randomNumber + image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                //saveToDatabase(url);\r\n                setImageURL(url);\r\n              });\r\n          }\r\n        );\r\n      },\r\n      error(err) {\r\n        console.log(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  function saveToDatabase(url, imageName) {\r\n    const splitURL = imageName.split(\".\")\r\n    const newImageName = (splitURL[0] + \"_500x500.\" + splitURL[1])\r\n    const newURL = url.replace(imageName, newImageName)\r\n    const newItem = {\r\n      itemName: nameState.name,\r\n      itemDescription: descriptionState.description,\r\n      itemPrice: 45,\r\n      imageURL: `${newURL}`,\r\n      itemOwner: userData.googleId,\r\n      likesFromItems: [],\r\n      likesItems: [],\r\n      seenItems: [],\r\n      itemLocation: userLocation,\r\n    };\r\n    API.saveItem(newItem).then((itemResponse) => {\r\n      const itemId = itemResponse.data._id;\r\n      API.getUser(userData.googleId).then((res) => {\r\n        const updatedUser = {\r\n          listedItems: res.data[0].listedItems,\r\n        };\r\n        updatedUser.listedItems.push(itemId);\r\n        API.updateUser(userData.googleId, updatedUser);\r\n        console.log(\"save to database run\");\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    // this cant be a form for some reason?\r\n    <div className=\"container addItem\" style={{ marginTop: \"50px\" }}>\r\n      {redirect ? <Redirect push to=\"/\" /> : null}\r\n      <div className=\"row\">\r\n        <div className=\"col m7 s6 nameInput\">\r\n          <Textarea\r\n            onChange={handleNameChange}\r\n            name=\"name\"\r\n            label=\"Add Item Name\"\r\n            style={{ color: \"#025159\" }}\r\n            id=\"TextInput-5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col m5 s6\">\r\n          <form action=\"#\">\r\n            <div className=\"file-field input-field\">\r\n              <div className=\"btn\" style={{ color: \"#D4EEE3\" }}>\r\n                {/* <span>File</span> */}\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"fileBox\"\r\n                  onChange={handleFileChange}\r\n                  style={{ color: \"#03A696\" }}\r\n                />\r\n                <i className=\"material-icons\">camera_alt</i>\r\n              </div>\r\n              <div className=\"file-path-wrapper\">\r\n                <input\r\n                  className=\"file-path validate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Choose a photo\"\r\n                  style={{ color: \"#f25d27\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"center-align\">\r\n\r\n        {imageURL && (\r\n          <img\r\n            className=\"responsive-img\"\r\n            src={imageURL}\r\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col m12 s12\">\r\n          <Textarea\r\n            onChange={handleDescriptionChange}\r\n            name=\"description\"\r\n            label=\"Add a description\"\r\n            style={{ color: \"#025159\" }}\r\n          />\r\n          <div className=\"container right-align\">\r\n            <Row>\r\n              <Col s={6} m={6}></Col>\r\n              <Col s={6} m={6}>\r\n                <Confetti\r\n                  id=\"confetti\"\r\n                  active={reward}\r\n                  className=\"right-align\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Row>\r\n        <Col s={12} m={12} className=\"center\">\r\n          <Button\r\n            // disabled={!(formObject.author && formObject.title)}\r\n            //onClick={fileUploadHandler}\r\n            large\r\n            node=\"a\"\r\n            id=\"mainFileBtn\"\r\n            onClick={previewUploadHandler}\r\n            style={{\r\n              marginRight: \"5px\",\r\n            }}\r\n          >\r\n            {buttonText}\r\n          </Button>\r\n\r\n          {wait ? <Redirect to={`/profile/${userData.googleId}`} /> : \"\"}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function SwipingCard(props) {\r\n    return (\r\n        <div class=\"card swipCard center-align\">\r\n            <div class=\"card-image swipCard center-align\">\r\n                <img className=\"cardImage center-align\" draggable=\"false\"src={props.itemInfo.imageURL} alt=\"swip card\" />\r\n            </div>\r\n            <div class=\"card-content\">\r\n                <span class=\"card-title\">{props.itemInfo.itemName}</span>\r\n                <div>{props.itemInfo.itemDescription}</div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Slider, { SliderTooltip } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport \"./style.css\"\r\n\r\n\r\nfunction DistanceSlider(distance) {\r\n    const { Handle } = Slider;\r\n\r\n    const marks = {\r\n        0: <strong>0 <br></br>Miles</strong>,\r\n        50: <strong>50 Miles</strong>\r\n    }\r\n\r\n    const handle = props => {\r\n    const { value, dragging, index, ...restProps } = props;\r\n    return (\r\n        <SliderTooltip\r\n        prefixCls=\"rc-slider-tooltip\"\r\n        overlay={`${value} Miles`}\r\n        visible={dragging}\r\n        placement=\"top\"\r\n        key={index}\r\n        >\r\n        <Handle value={value} {...restProps} />\r\n        </SliderTooltip>\r\n    );\r\n    };\r\n\r\n    return (  \r\n    <div>\r\n        <div className=\"center-align\">\r\n        <Slider min={0} max={50} className=\"distanceSlider\" defaultValue={distance.distanceBoundary} handle={handle} marks={marks} onAfterChange={(e) => distance.setDistanceBoundary(e)}/>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DistanceSlider","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { Button, Modal, Row, Col, CardPanel } from 'react-materialize';\r\nimport  {motion, useMotionValue, useTransform } from \"framer-motion\"\r\nimport SwipingCard from \"../components/SwipingCard\"\r\nimport DistanceSlider from '../components/DistanceSlider'\r\nimport API from \"../utils/API\";\r\nimport \"./style.css\"\r\nlet preventFirstRender = false\r\n\r\nfunction Swipping() {\r\n    let startingDragPoint = {}\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [notUserItems, setNotUserItems] = useState([])\r\n    const [currentItem, setCurrentItem] = useState([])\r\n    const [noMoreItems, setNoMoreItems] = useState(false)\r\n    const [activateCheckMark, setActivateCheckMark ] = useState(false)\r\n    const [activateRedXMark, setActivateRedXMark] = useState(false)\r\n    const [imageNumber, setImageNumber] = useState(0)\r\n    const [itIsAMatch, setItIsAMatch] = useState(false)\r\n    const [distanceBoundary, setDistanceBoundary] = useState(50)\r\n    const [modalMatchImage1, setModalMatchImage1] = useState('')\r\n    const [modalMatchImage2, setModalMatchImage2] = useState('')\r\n    const { id, item } = useParams()\r\n    const itemData = item\r\n    const [userData, setUserData] = useState({\r\n        email: \"\",\r\n        firstName: \"\",\r\n        googleId: \"\",\r\n        image: \"\",\r\n        lastName: \"\",\r\n        listedItems: [],\r\n        rating: []}\r\n    )\r\n\r\n    useEffect(() => {\r\n        API.getUser(id).then((res) => {\r\n            const newUser = {\r\n                email: res.data[0].email,\r\n                firstName: res.data[0].firstName,\r\n                googleId: res.data[0].googleId,\r\n                image: res.data[0].image,\r\n                lastName: res.data[0].lastName,\r\n                listedItems: res.data[0].listedItems,\r\n                rating: res.data[0].rating\r\n            }\r\n            setUserData(newUser)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        // Sets all user's items to user's current location\r\n        const getCoords = async () => {\r\n            const pos = await new Promise((resolve, reject) => {\r\n              navigator.geolocation.getCurrentPosition(resolve, reject);\r\n            });\r\n            return [pos.coords.latitude, pos.coords.longitude]\r\n        };\r\n        const coords = getCoords().then((res) => {\r\n            API.getUserItems(userData.googleId).then((userItemsResponse) => {\r\n                for (let z = 0; z < userItemsResponse.data.length; z++) {\r\n                    const newCoords = {\r\n                        itemLocation: res\r\n                    }\r\n                    API.updateItem(userItemsResponse.data[z]._id, newCoords)\r\n                }\r\n            })\r\n        });\r\n\r\n        if (userData === null) {\r\n            setRedirect(true)\r\n        }\r\n        API.getAllItems().then((res) => {\r\n            // filters out selected item so it cant see itself\r\n            const notUserItemsArray = res.data.filter(item => (\r\n                (item.itemOwner !== id)\r\n            ))\r\n            // filters out already seen items\r\n            API.getItem(itemData).then((response) => {\r\n                const seenItems = response.data.seenItems\r\n                for (let i = 0; i < seenItems.length; i++) {\r\n                    for (let p = 0; p < notUserItemsArray.length; p++) {\r\n                        if (seenItems[i] === notUserItemsArray[p]._id) {\r\n                            notUserItemsArray.splice(p, 1)\r\n                            if (notUserItemsArray.length === 0) {\r\n                                setNoMoreItems(true)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // moves items that like current item to front of list\r\n                for (let q = 0; q < notUserItemsArray.length; q++) {\r\n                    if (notUserItemsArray[q].likesItems.includes(itemData)) {\r\n                        notUserItemsArray.unshift(notUserItemsArray.splice(q, 1)[0])\r\n                    }\r\n                }\r\n\r\n                API.getItem(itemData).then((userItemRes) => {\r\n                    console.log(userItemRes)\r\n                    const sortedNotUserItems = []\r\n                     // Sorting by Location\r\n                     for (let v = 0; v < notUserItemsArray.length; v++) {\r\n                         const notUserLat = notUserItemsArray[v].itemLocation[0]\r\n                         const notUserLong = notUserItemsArray[v].itemLocation[1]\r\n                         const userLat = userItemRes.data.itemLocation[0]\r\n                         const userLong = userItemRes.data.itemLocation[1]\r\n\r\n                        getDistanceFromLatLonInKm(notUserLat, notUserLong, userLat, userLong).then((distanceResponse) => {\r\n                            if (distanceResponse < distanceBoundary) {\r\n                                sortedNotUserItems.push(notUserItemsArray[v])\r\n                            }\r\n                            // no more items triggers Modal\r\n                            if (sortedNotUserItems.length === 0) {\r\n                                console.log(sortedNotUserItems)\r\n                                setNoMoreItems(true)\r\n                            }\r\n                            else {\r\n                                setNotUserItems(sortedNotUserItems)\r\n                                setCurrentItem(sortedNotUserItems[imageNumber])\r\n                            }\r\n                        })\r\n                     }\r\n                })\r\n            })\r\n        })\r\n    }, [distanceBoundary])\r\n\r\n    // Haversine Formula\r\n    const getDistanceFromLatLonInKm = async(lat1,lon1,lat2,lon2) => {\r\n        var R = 6371; // Radius of the earth in km\r\n        var dLat = deg2rad(lat2-lat1);  // deg2rad below\r\n        var dLon = deg2rad(lon2-lon1); \r\n        var a = \r\n          Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n          Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \r\n          Math.sin(dLon/2) * Math.sin(dLon/2)\r\n          ; \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n        var d = R * c; // Distance in km\r\n        return (d / 1.609344); // Convert to Miles\r\n    }\r\n      \r\n    function deg2rad(deg) {\r\n        return deg * (Math.PI/180)\r\n    }\r\n\r\n    // runs every time the imageNumber state changes\r\n    useEffect(() => {\r\n        if (preventFirstRender === true) {\r\n            if (imageNumber === notUserItems.length) {\r\n                setNoMoreItems(true)\r\n            }\r\n            else {\r\n                setCurrentItem(notUserItems[imageNumber])\r\n            }\r\n        }\r\n    }, [imageNumber])\r\n\r\n    function handleItemNotLike() {\r\n        preventFirstRender = true\r\n        API.getItem(itemData).then((res) => {\r\n            const updatedItemData = {\r\n                seenItems: res.data.seenItems\r\n            }\r\n            updatedItemData.seenItems.push(currentItem._id)\r\n            API.updateItem(itemData, updatedItemData).then((res) => {\r\n                setImageNumber(imageNumber + 1)\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleItemLike() {\r\n        preventFirstRender = true\r\n        // get item data, add to it, then do a put. Then do it for second item\r\n        API.getItem(itemData).then((userItemResponse) => {\r\n            const updatedItemData = {\r\n                seenItems: userItemResponse.data.seenItems,\r\n                likesItems: userItemResponse.data.likesItems\r\n            }\r\n            updatedItemData.seenItems.push(currentItem._id)\r\n            updatedItemData.likesItems.push(currentItem._id)\r\n            API.updateItem(itemData, updatedItemData).then((res) => {\r\n                API.getItem(currentItem._id).then((currentItemResponse) => {\r\n                    console.log(currentItemResponse)\r\n                    const updatedItemData1 = {\r\n                        likesFromItems: currentItemResponse.data.likesFromItems\r\n                    }\r\n                    updatedItemData1.likesFromItems.push(itemData)\r\n                    API.updateItem(currentItem._id, updatedItemData1).then((res) => {\r\n                        // once updated, check if there is a match\r\n                        for (let i = 0; i < userItemResponse.data.likesFromItems.length; i++) {\r\n                            if (userItemResponse.data.likesFromItems[i] === currentItem._id) {\r\n                                setItIsAMatch(true)\r\n                                setModalMatchImage1(userItemResponse.data.imageURL)\r\n                                setModalMatchImage2(currentItem.imageURL)\r\n                                const matchData = {\r\n                                    item1Id: itemData,\r\n                                    item1Owner: userData.googleId,\r\n                                    item1Photo: userItemResponse.data.imageURL,\r\n                                    item1Name: userItemResponse.data.itemName,\r\n                                    item2Id: currentItem._id,\r\n                                    item2Owner: currentItemResponse.data.itemOwner,\r\n                                    item2Photo: currentItemResponse.data.imageURL,\r\n                                    item2Name: currentItemResponse.data.itemName,\r\n                                    item2Read: false\r\n                                }\r\n                                API.postMatch(matchData).then((matchRes) => {\r\n                                })\r\n                            }\r\n                        }\r\n                        setImageNumber(imageNumber + 1)\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleDistanceChange(e) {\r\n        setDistanceBoundary(e)\r\n    }\r\n\r\n    const x = useMotionValue(0)\r\n    const background = useTransform(\r\n        x,\r\n        [-100, 0, 100],\r\n        [\"#FF0000\", \"#FFFFFF\", \"#00FF00\"]\r\n    )\r\n\r\n    function processDragInfo(x, y) {\r\n        if ((startingDragPoint * 1.8) < x) {\r\n            handleItemLike()\r\n            setActivateCheckMark(true)\r\n            setTimeout(function () {\r\n                setActivateCheckMark(false)\r\n              }, 700)\r\n            \r\n        }\r\n        else if ((startingDragPoint / 2) > x) {\r\n            handleItemNotLike()\r\n            setActivateRedXMark(true)\r\n            setTimeout(function () {\r\n                setActivateRedXMark(false)\r\n              }, 700)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { redirect ? (<Redirect push to=\"/\" />) : null}\r\n            <div className=\"container center-align\" style={{ marginTop: \"20px\" }}>\r\n                <Row>\r\n                    <Col m={3} l={3}></Col>\r\n                    <Col s={12} m={6} l={6}>\r\n                        <motion.div style={{ background }} className=\"swipBackground\">\r\n                            <motion.div\r\n                            drag=\"x\"\r\n                            dragConstraints={{ left: 0, right: 0 }}\r\n                            style={{ x }}\r\n                            onDragStart={\r\n                                (event, info) => startingDragPoint = (info.point.x)\r\n                            }\r\n                            onDragEnd={\r\n                                (event, info) => processDragInfo(info.point.x, info.point.y)\r\n                            }\r\n                            >\r\n                                <Row>\r\n                                    <Col s={12}>\r\n                                        <SwipingCard itemInfo={currentItem}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                            </motion.div>\r\n                        </motion.div>  \r\n                    </Col>\r\n                    <Col m={3} l={3}></Col>\r\n                </Row>\r\n                <Row>\r\n                </Row>\r\n                <Row>\r\n                    <Col m={3} l={3} xl={1}></Col>\r\n                    <Col s={12} m={6} l={6} xl={9}>\r\n                        <h4 style={{ color: \"#025159\"}}>Set Distance</h4>\r\n                    </Col>\r\n                    <Col m={3} l={3} xl={2}></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col m={3} l={3}></Col>\r\n                    <Col s={12} m={6} l={6}>\r\n                        <DistanceSlider setDistanceBoundary={handleDistanceChange} distanceBoundary={distanceBoundary}/>\r\n                    </Col>\r\n                    <Col m={3} l={3}></Col>\r\n                </Row>\r\n                <Row style={{height: \"100px\"}}>\r\n                    <Col m={3} l={3}></Col>\r\n                    <Col s={12} m={6} l={6}>\r\n                        {/* check Mark */}\r\n                        {activateCheckMark ? ( <motion.img \r\n                            className=\"greenCheck\"\r\n                            src=\"../../img/greenCheckMark.png\"\r\n                            animate={{ rotate: 360 }}\r\n                            transition={{ duration: .5 }}\r\n                            />) : null}\r\n                         {activateRedXMark ? ( <motion.img \r\n                            className=\"greenCheck\"\r\n                            src=\"../../img/redXMark.png\"\r\n                            transition={{ duration: .5 }}\r\n                            />) : null}\r\n                    </Col>\r\n                    <Col m={3} l={3}></Col>\r\n                    \r\n                </Row>\r\n\r\n            </div>\r\n            {/* No more items to swap modal */}\r\n            <Modal\r\n                open={noMoreItems}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    dismissible: false\r\n                }}\r\n                >\r\n                <h3>No more items available!</h3>\r\n                <br></br>\r\n                <div>Add a new item, switch items to swap with, or try back later!</div>\r\n                <br></br><br></br>\r\n                <a href={`/profile/${userData.googleId}`}><Button>Back to my Profile</Button></a>\r\n                <br></br>\r\n            </Modal>\r\n            \r\n            {/* It's a match! */}\r\n            <Modal\r\n                open={itIsAMatch}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    dismissible: false\r\n                }}\r\n                >\r\n                <h3>It's a match!</h3>\r\n                <img src={modalMatchImage1} className=\"circle swapItemImage\" alt=\"user item\"></img>\r\n                <img src={modalMatchImage2} className=\"circle swapItemImage\" alt=\"other item\"></img>\r\n                <br></br>\r\n                <div>Head to the chat page or continue swipping!</div>\r\n                <br></br><br></br>\r\n                <a href={`/chat/${userData.googleId}`}><Button>Chat Page</Button></a>\r\n                <br></br><br></br>\r\n                <a><Button modal=\"close\">Continue</Button></a>\r\n                <br></br>   \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Swipping;","import React, { useEffect, useState } from \"react\";\r\nimport 'materialize-css';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Navbar, Icon, NavItem } from \"react-materialize\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\n\r\nconst CustomNavbar = (props) => {\r\nconst [ newText, setNewText ] = useState(false)\r\nconst [userData, setUserData] = useState({})\r\nconst [centerLogo, setCenterLogo] = useState(false)\r\nconst [ deleteNavbarLinks, setDeleteNavbarLinks ] = useState(false)\r\nconst { pathname } = useLocation();\r\nconst pathway = pathname.split(\"/\")\r\nconst id = pathway[pathway.length - 1]\r\n\r\nuseEffect(() => {\r\n    checkForNewTexts()\r\n    setInterval(function() {\r\n        checkForNewTexts()\r\n    }, 5000)\r\n}, [userData])\r\n\r\nuseEffect(() => {\r\n  if (pathway[1] === 'chat') {\r\n    setCenterLogo(true)\r\n  }\r\n  else {\r\n    setCenterLogo(false)\r\n  }\r\n  if (pathname === '/') {\r\n    setDeleteNavbarLinks(true)\r\n  }\r\n  else {\r\n    setDeleteNavbarLinks(false)\r\n  }\r\n}, [pathname])\r\n\r\nuseEffect(() => {\r\n  if (id) {\r\n    API.getUser(id).then((res) => {\r\n        const newUser = {\r\n            email: res.data[0].email,\r\n            firstName: res.data[0].firstName,\r\n            googleId: res.data[0].googleId,\r\n            image: res.data[0].image,\r\n            lastName: res.data[0].lastName,\r\n            listedItems: res.data[0].listedItems,\r\n            rating: res.data[0].rating\r\n        }\r\n        setUserData(newUser)\r\n    })\r\n  }\r\n}, [])\r\n\r\nfunction checkForNewTexts() {\r\n    let trueCount = 0;\r\n    if (userData) {\r\n        API.getUserMatches(userData.googleId).then((response) => {\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                if ((response.data[i].item1Owner === userData.googleId) && (response.data[i].item1NewText === true)) {\r\n                    trueCount++\r\n                }\r\n                else if ((response.data[i].item2Owner === userData.googleId) && (response.data[i].item2NewText === true)) {\r\n                    trueCount++\r\n                }\r\n            }\r\n            if (trueCount === 0) {\r\n                setNewText(false)\r\n            }\r\n            else {\r\n                setNewText(true)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n  if (deleteNavbarLinks === true) {\r\n    return (\r\n      <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"./../img/swapifyLogoTopDark-vector.png\" height=\"125\" alt=\"swapify logo\"/>\r\n        </a>\r\n      }\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      \r\n    </Navbar>\r\n    )\r\n  }\r\n  else if (centerLogo === true) {\r\n    return (\r\n      <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"./../img/swapifyLogoTopDark-vector.png\" height=\"125\" alt=\"swapify logo\"/>\r\n        </a>\r\n      }\r\n      centerLogo\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      <NavItem\r\n        tooltip=\"Add Item\"\r\n        href={`/createItem/${userData.googleId}`}\r\n        className=\"addItem\"\r\n        alt-text=\"add item\"\r\n        node=\"button\"\r\n      >\r\n        <Icon tooltip=\"Add Item\" node=\"button\">\r\n          add_circle\r\n        </Icon>\r\n      </NavItem>\r\n      <NavItem href={`/profile/${userData.googleId}`} className=\"profile\">\r\n        <Icon>person</Icon>\r\n      </NavItem>\r\n      <NavItem href={`/chat/${userData.googleId}`} className=\"swapIconWrapper\">\r\n        {newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        )}\r\n      </NavItem>\r\n    </Navbar>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n    <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"../../img/swapifyLogoTopDark-vector.png\" height=\"125\" alt=\"swapify logo\"/>\r\n        </a>\r\n      }\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      <NavItem\r\n        tooltip=\"Add Item\"\r\n        href={`/createItem/${userData.googleId}`}\r\n        className=\"addItem\"\r\n        alt-text=\"add item\"\r\n        node=\"button\"\r\n      >\r\n        <Icon tooltip=\"Add Item\" node=\"button\">\r\n          add_circle\r\n        </Icon>\r\n      </NavItem>\r\n      <NavItem href={`/profile/${userData.googleId}`} className=\"profile\">\r\n        <Icon>person</Icon>\r\n      </NavItem>\r\n      <NavItem href={`/chat/${userData.googleId}`} className=\"swapIconWrapper\">\r\n        {newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        )}\r\n      </NavItem>\r\n    </Navbar>\r\n    )\r\n  }\r\n \r\n};\r\n\r\nexport default CustomNavbar;\r\n","import React from \"react\";\r\nimport \"materialize-css\";\r\nimport { Footer } from \"react-materialize\";\r\nimport \"./style.css\";\r\n\r\nconst CustomFooter = (props) => {\r\n  return (\r\n    <div className=\"stickyFooter center\">\r\n      <Footer\r\n      copyrights=\"&copy; 2021 Swapify\">\r\n      </Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomFooter;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Welcome from \"./pages/welcome\"\r\nimport Profile from \"./pages/profile\"\r\nimport Chat from \"./pages/chat\"\r\nimport createItem from \"./pages/createItem\"\r\nimport Swipping from \"./pages/swipping\"\r\nimport CustomNavbar from './components/Navbar';\r\nimport CustomFooter from './components/Footer';\r\nimport API from \"./utils/API\"\r\nimport { Button, Modal } from 'react-materialize';\r\nimport Rating from 'react-rating'\r\nimport \"./appStyle.css\"\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const pathway = pathname.split(\"/\")\r\n  const id = pathway[pathway.length - 1]\r\n  const [openSwapModal, setOpenSwapModal] = useState(false)\r\n  const [openMatchModal, setOpenMatchModal] = useState(false)\r\n  const [modalImage, setModalImage] = useState('');\r\n  const [modalID, setModalID] = useState('')\r\n  const [modalMatchImage1, setModalMatchImage1] = useState('')\r\n  const [modalMatchImage2, setModalMatchImage2] = useState('')\r\n  const [openRateModal, setOpenRateModal] = useState(false)\r\n  const [rating, setRating] = useState(0)\r\n  const [deletedItemUserId, setDeletedItemUserId] = useState('')\r\n  \r\n  \r\n  setInterval(function () {\r\n    if (id) {\r\n      API.getUserItems(id).then((response) => {\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].deleteItem !== 'false') {\r\n            setDeletedItemUserId(response.data[i].deleteItem)\r\n            setModalImage(response.data[i].imageURL)\r\n            setModalID(response.data[i]._id)\r\n            setOpenSwapModal(true)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }, 5000)\r\n\r\n  setInterval(function () {\r\n    if (id) {\r\n      API.getUserMatches(id).then((response) => {\r\n          // checks if matches have been read or not by user2 (the user that was not swipping when the match was made)\r\n          for (let i = 0; i < response.data.length; i++) {\r\n              if ((response.data[i].item2Owner == id) && (response.data[i].item2Read === false)) {\r\n                  const matchData = {\r\n                      item2Read: true\r\n                  }\r\n                  API.updateUserMatch(response.data[i]._id, matchData).then((matchPutResponse) => {\r\n                      setOpenMatchModal(true)\r\n                      setModalMatchImage1(response.data[i].item1Photo)\r\n                      setModalMatchImage2(response.data[i].item2Photo)\r\n                  })\r\n              }\r\n          }\r\n      })\r\n    }\r\n  }, 5000)\r\n\r\n  function deleteItem() {\r\n    API.deleteItem(modalID).then((res) => {\r\n      setOpenRateModal(true)\r\n    })\r\n  }\r\n\r\n  function keepItem() {\r\n    const updatedItem = {\r\n      deleteItem: false\r\n    }\r\n    API.updateItem(modalID, updatedItem).then((res) => {\r\n      setOpenRateModal(true)\r\n    })\r\n  }\r\n\r\n  function submitRating() {\r\n    API.getUser(deletedItemUserId).then((res) => {\r\n      console.log(res.data[0].rating)\r\n      const ratingArray = res.data[0].rating\r\n      ratingArray.push(rating)\r\n      const newUserRating = {\r\n          rating: ratingArray\r\n      }\r\n      API.updateUser(deletedItemUserId, newUserRating).then((res) => {\r\n          window.location.reload();\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CustomNavbar></CustomNavbar>\r\n      <Route exact path=\"/\" component={Welcome} />\r\n      <Route path=\"/profile/:id\" component={Profile} />\r\n      <Route exact path=\"/createItem/:id\" component={createItem} />\r\n      <Route exact path=\"/swipping/:item/:id\" component={Swipping} />\r\n      <Route exact path=\"/chat/:id\" component={Chat} />\r\n      {window.location.pathname.includes('/chat/') ? null : <CustomFooter />}  \r\n      {/* Modal for when other user presses 'swap items' button */}\r\n      <Modal\r\n        open={openSwapModal}\r\n        className='center-align'\r\n        actions={[]}\r\n        options={{\r\n          dismissible: false\r\n        }}>\r\n        <h3>Warning</h3>\r\n        <img src={modalImage} className=\"circle swapItemImage\"></img>\r\n        <br></br>\r\n        <div>Another user has alerted us that you have swapped items with them.</div>\r\n        <div>If you confirm, your item will be deleted from Swapify.</div>\r\n        <div>If you deny, you can continue swapping with your item.</div>\r\n        <br></br>\r\n        <a><Button onClick={deleteItem} modal=\"close\">Confirm</Button></a>\r\n        <br></br><br></br>\r\n        <a><Button onClick={keepItem} modal=\"close\">Deny</Button></a>\r\n      </Modal>\r\n      {/* Match Alert Modal */}\r\n      <Modal\r\n        open={openMatchModal}\r\n        className='center-align'\r\n        >\r\n        <h3>You have a new Match!</h3>\r\n        <img src={modalMatchImage1} className=\"circle swapItemImage\"></img>\r\n        <img src={modalMatchImage2} className=\"circle swapItemImage\"></img>\r\n        <br></br>\r\n        <div>Go to the Chat Page to make the swap!</div>\r\n        <br></br>\r\n      </Modal>\r\n\r\n      {/* Rate User */}\r\n      <Modal\r\n          open={openRateModal}\r\n          className='center-align'\r\n          actions={[]}\r\n          options={{\r\n          dismissible: false\r\n          }}>\r\n          <h3>Match Deleted!</h3>\r\n          <br></br>\r\n          <div>Would you like to rate the other user?</div>\r\n          <br></br>\r\n          <Rating\r\n              emptySymbol={<i className=\"material-icons\">star_border</i>}\r\n              fullSymbol={<i className=\"material-icons\">star</i>}\r\n              onChange={(e) => setRating(e)}\r\n          ></Rating>\r\n          <br></br><br></br>\r\n          <a><Button onClick={submitRating} modal=\"close\">Submit Rating</Button></a>\r\n          <br></br><br></br>\r\n          <a><Button modal=\"close\">No Thanks</Button></a>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport 'materialize-css';\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css/dist/js/materialize.min.js'\r\n\r\nReactDOM.render(<React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n</React.StrictMode>, document.getElementById(\"root\"));\r\nregisterServiceWorker();"],"sourceRoot":""}