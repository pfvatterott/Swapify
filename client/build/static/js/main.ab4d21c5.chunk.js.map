{"version":3,"sources":["utils/API.js","pages/welcome.js","components/ItemCard/index.js","utils/chatContext.js","components/MatchCard/index.js","pages/profile.js","utils/firebase.js","components/MatchesSideBar/index.js","components/ChatMessage/index.js","components/ChatRoom/index.js","pages/chat.js","components/Form/index.js","pages/createItem.js","components/SwipingCard/index.js","components/DistanceSlider/index.js","pages/swipping.js","components/Navbar/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["id","axios","get","userData","post","itemData","userID","userId","put","itemId","matchInfo","matchData","console","log","localStorage","setItem","JSON","stringify","delete","Welcome","useState","redirect","setRedirect","setUserID","googleSuccess","response","a","userObj","profileObj","googleId","user","email","firstName","givenName","lastName","familyName","image","imageUrl","listedItems","API","then","res","data","length","catch","error","className","motion","h1","animate","y","opacity","initial","transition","delay","duration","type","stiffness","img","rotateZ","scale","whileHover","src","alt","class","push","to","clientId","process","buttonText","onSuccess","onFailure","alert","cookiePolicy","isSignedIn","render","renderProps","large","node","style","marginRight","waves","onClick","h2","div","height","h4","x","ItemCard","props","m","s","width","imageURL","lineHeight","paddingLeft","fontFamily","fontWeight","fontStyle","fontSize","color","itemName","itemDescription","href","data-tip","place","effect","results","loadItems","backgroundColor","chatContext","React","createContext","matchId","recentText","setChat","setNewText","MatchCard","itemIds","useContext","chatId","currentChatStyle","setCurrentChatStyle","userRating","setUserRating","openInfoModal","setOpenInfoModal","activateInfoModal","useEffect","allMatches","_id","otherUser","rating","ratingCount","i","Math","round","yourImageUrl","newText","open","actions","options","dismissible","userItemPhoto","otherItemImage","userItemName","otherItemName","modal","Profile","usersItemList","setUsersItemList","setMatchList","setUserData","setImageArray","useParams","matchArray","loadImages","tempArray","forEach","item","matchResponse","item1Owner","itemInfo","userItemId","item1Id","item1Photo","item1Name","otherItemId","item2Id","item2Owner","item2Photo","item2Name","newUser","marginTop","Array","fill","map","el","key","floating","paddingTop","paddingBottom","maxHeight","overflow","index","firebaseConfig","apiKey","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","storage","firestore","MatchesSideBar","matchList","setAllMatches","noChats","setNoChats","item1NewText","getCollectionsMostRecents","item2NewText","newArray","collection","orderBy","limit","returns","_delegate","_snapshot","docChanges","latestText","doc","partialValue","mapValue","fields","text","stringValue","textTime","createdAt","timestampValue","sortedList","sort","b","dateA","Date","fixed","trigger","match","ChatMessage","message","sentFromid","sentFromPhoto","messageClass","ChatRoom","messagesRef","setMessagesRef","query","useCollectionData","idField","messages","formValue","setFormValue","dummy","useRef","userItem","setUserItem","otherItem","setOtherItem","messagesEndRef","createRef","openRateModal","setOpenRateModal","setRating","photoURL","setTimeout","current","scrollIntoView","behavior","sendMessage","e","preventDefault","add","FieldValue","serverTimestamp","sentToid","setToPhoto","emptySymbol","fullSymbol","onChange","userResponse","ratingArray","newUserRating","window","location","reload","msg","ref","onSubmit","value","required","target","delResponse","deleteItem","updateRes","ChatApp","setChatId","setRecentText","notNewText","setNotNewText","Provider","floor","random","TextArea","rows","FormBtn","display","marginBottom","children","Item","reward","setReward","descriptionState","setDescriptionState","nameState","setNameState","setImage","setImageURL","setButtonText","userLocation","setUserLocation","wait","setWait","saveUserLocation","position","coords","latitude","longitude","document","getElementById","addEventListener","event","navigator","geolocation","getCurrentPosition","fileUploadHandler","Compressor","quality","success","result","randomNumber","name","on","snapshot","child","getDownloadURL","url","imageName","splitURL","split","newImageName","newURL","replace","newItem","description","itemPrice","itemOwner","likesFromItems","likesItems","seenItems","itemLocation","itemResponse","updatedUser","saveToDatabase","err","placeholder","action","files","maxWidth","desc","active","SwipingCard","draggable","DistanceSlider","distance","createSliderWithTooltip","Slider","Range","Handle","min","max","defaultValue","distanceBoundary","handle","dragging","restProps","prefixCls","overlay","visible","placement","onAfterChange","setDistanceBoundary","preventFirstRender","Swipping","startingDragPoint","notUserItems","setNotUserItems","currentItem","setCurrentItem","noMoreItems","setNoMoreItems","imageNumber","setImageNumber","itIsAMatch","setItIsAMatch","modalMatchImage1","setModalMatchImage1","modalMatchImage2","setModalMatchImage2","Promise","resolve","reject","pos","getCoords","userItemsResponse","z","newCoords","notUserItemsArray","filter","p","splice","q","includes","unshift","userItemRes","sortedNotUserItems","v","notUserLat","notUserLong","userLat","userLong","getDistanceFromLatLonInKm","distanceResponse","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","sin","cos","c","atan2","sqrt","d","deg","PI","useMotionValue","background","useTransform","processDragInfo","userItemResponse","updatedItemData","currentItemResponse","updatedItemData1","item2Read","matchRes","l","drag","dragConstraints","left","right","onDragStart","info","point","onDragEnd","CustomNavbar","centerLogo","setCenterLogo","deleteNavbarLinks","setDeleteNavbarLinks","pathname","useLocation","pathway","checkForNewTexts","trueCount","setInterval","alignLinks","brand","centerChildren","menuIcon","Badge","variant","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","tooltip","alt-text","CustomFooter","copyrights","App","openSwapModal","setOpenSwapModal","openMatchModal","setOpenMatchModal","modalImage","setModalImage","modalID","setModalID","deletedItemUserId","setDeletedItemUserId","matchPutResponse","exact","path","component","createItem","Chat","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","StrictMode","URL","origin","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab4d21c5.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default {\r\n  getUser: function(id) {\r\n    return axios.get(\"/api/users/\" + id);\r\n  },\r\n\r\n  saveUser: function(userData) {\r\n    return axios.post(\"/api/users\", userData);\r\n  },\r\n\r\n  saveItem: function(itemData) {\r\n    return axios.post(\"/api/items\", itemData)\r\n  },\r\n\r\n  getUserItems: function(userID) {\r\n    return axios.get(\"/api/items/user/\" + userID)\r\n  },\r\n\r\n  getAllItems: function() {\r\n    return axios.get(\"/api/items/\")\r\n  },\r\n\r\n  updateUser: function(userId, userData) {\r\n    return axios.put(\"/api/users/\" + userId, userData)\r\n  },\r\n\r\n  updateItem: function(itemId, itemData) {\r\n    return axios.put(\"/api/items/\" + itemId, itemData)\r\n  },\r\n\r\n  getItem: function(itemId) {\r\n    return axios.put(\"/api/items/\" + itemId)\r\n  },\r\n\r\n  getAllMatches: function() {\r\n    return axios.get(\"/api/matches/\")\r\n  },\r\n\r\n  postMatch: function(matchInfo) {\r\n    return axios.post(\"/api/matches\", matchInfo)\r\n  },\r\n\r\n  getUserMatches: function(id) {\r\n    return axios.get(\"/api/matches/user/\" + id)\r\n  },\r\n\r\n  updateUserMatch: function(id, matchData) {\r\n    return axios.put(\"/api/matches/\" + id, matchData)\r\n  },\r\n\r\n  handleUseItem: function(id) {\r\n    console.log(id)\r\n    localStorage.setItem('itemData', JSON.stringify(id))\r\n  },\r\n\r\n  getMatch: function(id) {\r\n    return axios.get(\"/api/matches/\" + id)\r\n  },\r\n\r\n  deleteMatchesForItem: function(id) {\r\n    return axios.delete(\"/api/matches/all/\" + id)\r\n  },\r\n\r\n  deleteItem: function(id) {\r\n    return axios.delete(\"/api/items/\" + id)\r\n  },\r\n\r\n  deleteMatch: function(id) {\r\n    return axios.delete(\"/api/matches/\" + id)\r\n  }, \r\n\r\n  getAllCloseItems: function(coordinates) {\r\n    return axios.get(\"/api/items/location/\" + coordinates)\r\n  }\r\n  \r\n\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"materialize-css\";\r\nimport \"./style.css\";\r\nimport \"./welcomeStyle.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Button } from \"react-materialize\";\r\n\r\nfunction Welcome() {\r\n\r\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconst [redirect, setRedirect] = useState(false);\r\nconst [userID, setUserID] = useState('')\r\n\r\nconst googleSuccess = async (response) => {\r\n    const userObj = response.profileObj\r\n    setUserID(userObj.googleId)\r\n    const user = {\r\n        email: userObj.email,\r\n        firstName: userObj.givenName,\r\n        lastName: userObj.familyName,\r\n        image: userObj.imageUrl,\r\n        googleId: userObj.googleId,\r\n        listedItems: []\r\n    }\r\n    API.getUser(userObj.googleId).then(res => {\r\n        if (res.data.length > 0) {\r\n            setRedirect(true)\r\n        }\r\n        else {\r\n            API.saveUser(user)\r\n            setRedirect(true)\r\n        }\r\n    }).catch(error => console.log(error))\r\n\r\n}\r\n\r\nconst googleFailure = (response) => {\r\nconsole.log(\"Google Sign in was unsuccessful\");\r\nalert(\"please try logging in again\");\r\nconsole.log(response);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"hero-image\">\r\n      <div className=\"container center\">\r\n        <div className=\"row opening\">\r\n          <motion.h1\r\n            animate={{ y: 0, opacity: 1 }}\r\n            initial={{ y: -250, opacity: 0 }}\r\n            transition={{\r\n              delay: 0.5,\r\n              duration: 1,\r\n              type: \"spring\",\r\n              stiffness: 150,\r\n            }}\r\n          >\r\n            Recycle your life!\r\n          </motion.h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <motion.img\r\n            animate={{ rotateZ: 720, opacity: 1, scale: 1 }}\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            transition={{ delay: 0.5, duration: 1.5 }}\r\n            whileHover={{ rotateZ: 180 }}\r\n            src=\"./../img/swapifyLogo-S-vector.png\"\r\n            alt=\"Swapify S Logo\"\r\n            class=\"responsive-img\"\r\n          />\r\n          {/* <motion.img\r\n                      animate={{ x: 0, opacity: 1 }}\r\n                      initial={{ opacity: 0 }}\r\n                      transition={{ delay: 2.5, duration: 0.5 }}\r\n                      src=\"./../img/wapifyLogoCenter-vector.png\"\r\n                      alt=\"Swapify Logo\"\r\n                      class=\"responsive-img\"\r\n                  /> */}\r\n        </div>\r\n\r\n        <div className=\"row login\">\r\n          {redirect ? <Redirect push to={`/profile/${userID}`} /> : null}\r\n          <GoogleLogin\r\n            className=\"loginBtn\"\r\n            clientId={googleClientId}\r\n            buttonText=\"Get Swapp'n!\"\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            isSignedIn={false}\r\n            render={(renderProps) => (\r\n              <motion.a\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0, scale: 0 }}\r\n                transition={{ delay: 2, duration: 1 }}\r\n              >\r\n                <Button\r\n                  large\r\n                  className=\"loginBtn z-depth-3\"\r\n                  node=\"a\"\r\n                  style={{\r\n                    marginRight: \"5px\",\r\n                  }}\r\n                  waves=\"light\"\r\n                  onClick={renderProps.onClick}\r\n                >\r\n                  Get Swapp'n!\r\n                </Button>\r\n              </motion.a>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div className=\"container center \">\r\n      <div className=\"row howTo\">\r\n        <motion.h2\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          transition={{ delay: 3, duration: 2 }}\r\n        >\r\n          How Swapify works:{\" \"}\r\n        </motion.h2>\r\n      </div>\r\n      <motion.div\r\n        className=\"row howToRow\"\r\n        animate={{ opacity: 1 }}\r\n        initial={{ opacity: 0 }}\r\n        transition={{ delay: 3, duration: 2 }}\r\n        whileHover={{}}\r\n      >\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s6 right-align symbol1\">\r\n            <motion.img\r\n              src=\"./../img/profileSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how1\"\r\n            >\r\n              Sign into your Profile\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s6 right-align symbol2\">\r\n            <motion.img\r\n              src=\"./../img/addItemSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how2\"\r\n            >\r\n              Add a new item to swap\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s6 right-align symbol3\">\r\n            <motion.img\r\n              src=\"./../img/swipeSymbol.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how3\"\r\n            >\r\n              Swipe to swap & match\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          animate={{ opacity: 1 }}\r\n          initial={{ opacity: 0 }}\r\n          // transition={{ delay: 3, duration: 2 }}\r\n          whileHover={{\r\n            scale: 1.2,\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div className=\"col l4 s6 right-align symbol4\">\r\n            <motion.img\r\n              src=\"./../img/swapSymbol2.png\"\r\n              alt=\"Swapify Logo\"\r\n              height=\"100px\"\r\n            />\r\n          </div>\r\n          <div className=\"col l6 center\">\r\n            <motion.h4\r\n              animate={{ opacity: 1, x: 0 }}\r\n              initial={{ opacity: 0, x: 1000 }}\r\n              transition={{ delay: 3, duration: 1 }}\r\n              className=\"how4\"\r\n            >\r\n              Chat and swap with matches\r\n            </motion.h4>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  </>\r\n);\r\n}\r\n\r\nexport default Welcome;","import React from \"react\";\r\nimport { Button, Card, CollectionItem, Col } from \"react-materialize\";\r\nimport API from \"../../utils/API\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ReactTooltip from 'react-tooltip'; \r\n\r\nconst ItemCard = (props) => {\r\n    return (\r\n        <CollectionItem className=\" valign-wrapper\">\r\n                <Col m={2} s={2}>\r\n                    <img\r\n                        alt=\"\"\r\n                        className=\"circle\"\r\n                        style={{ height: \"150px\", width: \"150px\" }}\r\n                        src={props.imageURL}\r\n                    />\r\n                </Col>\r\n                <Col m={7} s={7}>\r\n                    <span\r\n                        className=\"title\"\r\n                        style={{\r\n                            height: \"70px\",\r\n                            lineHeight: \"70px\",\r\n                            paddingLeft: \"0px\",\r\n                            fontFamily: \"proxima-nova, sans-serif\",\r\n                            fontWeight: \"700\",\r\n                            fontStyle: \"normal\",\r\n                            fontSize: \"20px\",\r\n                            color: \"#025159\",\r\n                        }}\r\n                    >\r\n                        {props.itemName}\r\n                    </span>\r\n\r\n                    <span\r\n                        className=\"description\"\r\n                        style={{\r\n                            height: \"70px\",\r\n                            lineHeight: \"70px\",\r\n                            paddingLeft: \"20px\",\r\n                            fontFamily: \"proxima-nova, sans-serif\",\r\n                            fontWeight: \"100\",\r\n                            fontStyle: \"normal\",\r\n                            color: \"#025159\",\r\n                        }}\r\n                    >\r\n                        {props.itemDescription}\r\n                    </span>\r\n                </Col>\r\n\r\n                <Col m={1} s={1}>\r\n                    {/* <a\r\n                className=\"secondary-content\"\r\n                href={`/swipping/${props.id}/${props.userData.googleId}`}\r\n            >\r\n            <Button className = \"btn-floating btn-large\" onClick={() => API.handleUseItem(props.id)} style= {{backgroundColor:\"#O3A696\" }}>  <img src=\"/img/swapifyLogoS-vector.png\" style={{height: \"30px\"}} /></Button>\r\n            </a> */}\r\n                    <a\r\n                        className=\"secondary-content\"\r\n                        href={`/swipping/${props.id}/${props.userData.googleId}`}\r\n                    >\r\n                        <img\r\n                            src=\"/img/S-logoBtn-vector.png\"\r\n                            onClick={() => API.handleUseItem(props.id)}\r\n                            style={{ height: \"65px\" }}\r\n                            data-tip=\"Swap your Item\"\r\n                        />\r\n                        <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\"/>\r\n\r\n                    </a>\r\n                </Col>\r\n                <Col m={1} s={1}>\r\n                    <Button\r\n                        className=\"btn-floating btn-large\"\r\n                        onClick={() => {\r\n                            API.deleteItem(props.id).then((results) => {\r\n                                props.loadItems();\r\n                            });\r\n                        }}\r\n                        style={{ backgroundColor: \"#F20505\" }}\r\n                        data-tip=\"Delete Item\"\r\n                    >\r\n                        <i className=\"material-icons\">delete</i>\r\n                    </Button>\r\n                </Col>\r\n        </CollectionItem>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import React from \"react\";\r\n\r\nconst chatContext = React.createContext({\r\n  matchId: \"\",\r\n  recentText: \"\",\r\n  setChat: () => {},\r\n  setNewText: () => {}\r\n});\r\n\r\nexport default chatContext;\r\n","\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, CollectionItem, Modal, Row, Col } from 'react-materialize';\r\nimport \"./style.css\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport API from \"../../utils/API\";\r\n\r\nconst MatchCard = (props) => {\r\n    const itemIds = {\r\n        matchId: props.matchData.matchId\r\n    }\r\n    const { setChat, chatId } = useContext(chatContext)\r\n    const [ currentChatStyle, setCurrentChatStyle ] = useState(false)\r\n    const [ userRating, setUserRating ] = useState(0)\r\n    const [ openInfoModal, setOpenInfoModal ] = useState(false)\r\n\r\n    useEffect(() => {\r\n       setChat({matchId: props.allMatches.data[0]._id})\r\n       API.getUser(props.matchData.otherUser).then((res) => {\r\n           if (res.data[0].rating.length === 0) {\r\n               setUserRating(0)\r\n           }\r\n           else {\r\n               let ratingCount = 0\r\n               for (let i = 0; i < res.data[0].rating.length; i++) {\r\n                   ratingCount = ratingCount + res.data[0].rating[i]\r\n               }\r\n               setUserRating(Math.round(ratingCount / res.data[0].rating.length))\r\n           }\r\n       })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (chatId.matchId === props.matchData.matchId) {\r\n            setCurrentChatStyle(true)\r\n        }\r\n        else {\r\n            setCurrentChatStyle(false)\r\n        }\r\n    }, [chatId])\r\n\r\n    function activateInfoModal() {\r\n        setOpenInfoModal(true)\r\n        console.log(props.matchData)\r\n    }\r\n\r\n    function closeInfoModal() {\r\n        setOpenInfoModal(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* highlights currently selected chat */}\r\n            {currentChatStyle ? (\r\n                <CollectionItem className=\"avatar valign-wrapper\" style={{backgroundColor:\"#D3EEE3\"}}>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle userItemPicture\"\r\n                    src={props.yourImageUrl}\r\n                /></a>\r\n                <a className=\"noHover\"><i className=\"material-icons swapSymbol noHover\">autorenew</i></a>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle itemPicture noHover\"\r\n                    src={props.imageURL}\r\n                /><i className=\"material-icons ratingStar noHover\">star</i><p className=\"ratingNumber noHover\">{userRating}</p></a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    <a className=\"btn-floating btn-large infoButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {activateInfoModal()}} ><i className=\"material-icons\">info</i></a>\r\n                </a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    {props.matchData.newText ? (<a className=\"btn-floating btn-large chatButton pulse\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>) : (<a className=\"btn-floating btn-large chatButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>)}\r\n                    \r\n                </a>\r\n            </CollectionItem>\r\n            ) : (\r\n                <CollectionItem className=\"avatar valign-wrapper\">\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle userItemPicture \"\r\n                    src={props.yourImageUrl}\r\n                /></a>\r\n                <a className=\"noHover\"><i className=\"material-icons swapSymbol noHover\">autorenew</i></a>\r\n                <a className=\"noHover\"><img\r\n                    alt=\"\"\r\n                    className=\"circle itemPicture noHover\"\r\n                    src={props.imageURL}\r\n                /><i className=\"material-icons ratingStar noHover\">star</i><p className=\"ratingNumber\">{userRating}</p></a>\r\n\r\n                <a className=\"secondary-content\">\r\n                    <a className=\"btn-floating btn-large infoButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {activateInfoModal()}} ><i className=\"material-icons\">info</i></a>\r\n                </a>\r\n                <a className=\"secondary-content\">\r\n                    {props.matchData.newText ? (<a className=\"btn-floating btn-large chatButton pulse\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>) : (<a className=\"btn-floating btn-large chatButton\" style= {{backgroundColor:\"#F28705\"}} onClick={() => {setChat(itemIds)}} ><i className=\"material-icons\">chat</i></a>)}\r\n                    \r\n                </a>\r\n            </CollectionItem>\r\n            )}\r\n{/* \r\n            <Modal\r\n                open={openInfoModal}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                dismissible: false\r\n                }}>\r\n                <div className=\"modalUserItem left center-align\">\r\n                    <img src={props.matchData.userItemPhoto} className=\"circle modalUserImage\"></img>\r\n                    \r\n                    <br></br><br></br>\r\n                    <h5>{props.matchData.userItemName}</h5>\r\n                </div>\r\n                <div className=\"modalOtherItem center-align\">\r\n                    <img src={props.matchData.otherItemImage} className=\"circle modalUserImage\"></img>\r\n                    \r\n                    <br></br><br></br>\r\n                    <h5>{props.matchData.otherItemName}</h5>\r\n                </div>\r\n                <br></br><br></br>\r\n\r\n                <a><Button modal=\"close\" className=\"center-align\">Close</Button></a>\r\n            </Modal> */}\r\n\r\n            <Modal\r\n                open={openInfoModal}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    dismissible: false\r\n                }}>\r\n                <Row>\r\n                    <Col s={6}>\r\n                        <img src={props.matchData.userItemPhoto} className=\"circle modalUserImage\"></img>\r\n                    </Col>\r\n                    <Col s={6}>\r\n                        <img src={props.matchData.otherItemImage} className=\"circle modalUserImage\"></img>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col s={6}>\r\n                    <h5>{props.matchData.userItemName}</h5>\r\n                    </Col>\r\n                    <Col s={6}>\r\n                    <h5>{props.matchData.otherItemName}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <a><Button modal=\"close\" onClick={closeInfoModal}>Close</Button></a>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MatchCard;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport ItemCard from \"../components/ItemCard\";\r\nimport CarouselCard from \"../components/CarouselCard\";\r\nimport MatchCard from \"../components/MatchCard\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  CollectionItem,\r\n  Collection,\r\n  Carousel,\r\n  Card,\r\n  Icon,\r\n  CardTitle,\r\n} from \"react-materialize\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport \"./style.css\";\r\nimport \"./profileStyle.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n//document.body.style = \"background: -webkit-gradient(linear, top, bottom, from(#003399), to(#6699cc));background: -webkit-linear-gradient(#025159, #03A696);background: linear-gradient(#025159, #03A696);zoom: 1;margin: 0;padding-top: 2%;padding-bottom: 3%;background-attachment: fixed;\"\r\n\r\nfunction Profile() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectToSwipping, setRedirectToSwipping] = useState(false);\r\n  const [usersItemList, setUsersItemList] = useState([]);\r\n  const [matchList, setMatchList] = useState([]);\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    googleId: \"\",\r\n    image: \"\",\r\n    lastName: \"\",\r\n    listedItems: [],\r\n    rating: [],\r\n  });\r\n  const [imageArray, setImageArray] = useState([\"\"]);\r\n  const [rating, setRating] = useState();\r\n  const { id } = useParams();\r\n  const [userRating, setUserRating] = useState(0);\r\n\r\n  let matchArray = [];\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadImages();\r\n    API.getUser(id).then((res) => {\r\n      const newUser = {\r\n        email: res.data[0].email,\r\n        firstName: res.data[0].firstName,\r\n        googleId: res.data[0].googleId,\r\n        image: res.data[0].image,\r\n        lastName: res.data[0].lastName,\r\n        listedItems: res.data[0].listedItems,\r\n        rating: res.data[0].rating,\r\n      };\r\n      setUserData(newUser);\r\n      if (res.data[0].rating.length === 0) {\r\n        setUserRating(0);\r\n      } else {\r\n        let ratingCount = 0;\r\n        for (let i = 0; i < res.data[0].rating.length; i++) {\r\n          ratingCount = ratingCount + res.data[0].rating[i];\r\n        }\r\n        setUserRating(Math.round(ratingCount / res.data[0].rating.length));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadImages();\r\n  }, [userData]);\r\n\r\n  function loadImages() {\r\n    let tempArray = [];\r\n    usersItemList.forEach((item, i) => {\r\n      tempArray.push(item.imageURL);\r\n    });\r\n    if (usersItemList.length == 0) {\r\n      return;\r\n    }\r\n    console.log(tempArray);\r\n    setImageArray(tempArray);\r\n  }\r\n\r\n  function loadItems() {\r\n    if (userData === null) {\r\n      //   setRedirect(true)\r\n    }\r\n    API.getUserItems(userData.googleId).then((response) => {\r\n      setUsersItemList(response.data);\r\n    });\r\n    API.getUserMatches(userData.googleId).then((matchResponse) => {\r\n      matchResponse.data.forEach((item) => {\r\n        if (item.item1Owner === userData.googleId) {\r\n          const itemInfo = {\r\n            userItemId: item.item1Id,\r\n            userId: item.item1Owner,\r\n            userItemPhoto: item.item1Photo,\r\n            userItemName: item.item1Name,\r\n            otherItemId: item.item2Id,\r\n            otherUser: item.item2Owner,\r\n            otherItemImage: item.item2Photo,\r\n            otherItemName: item.item2Name,\r\n          };\r\n          matchArray.push(itemInfo);\r\n          if (matchResponse.data.length === matchArray.length) {\r\n            setMatchList(matchArray);\r\n          }\r\n        } else {\r\n          const itemInfo = {\r\n            userItemId: item.item2Id,\r\n            userId: item.item2Owner,\r\n            userItemPhoto: item.item2Photo,\r\n            userItemName: item.item2Name,\r\n            otherItemId: item.item1Id,\r\n            otherUser: item.item1Owner,\r\n            otherItemImage: item.item1Photo,\r\n            otherItemName: item.item1Name,\r\n          };\r\n          matchArray.push(itemInfo);\r\n          if (matchResponse.data.length === matchArray.length) {\r\n            setMatchList(matchArray);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleUseItem(id) {\r\n    console.log(id);\r\n    localStorage.setItem(\"itemData\", JSON.stringify(id));\r\n    //  setRedirectToSwipping(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* {redirect ? (<Redirect push to=\"/\" />) : null} */}\r\n\r\n      <div className=\"container center-align\" style={{ marginTop: \"20px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col m12 s12 \">\r\n            <motion.img\r\n              animate={{ opacity: 1 }}\r\n              initial={{ opacity: 0 }}\r\n              transition={{\r\n                delay: 0.2,\r\n                duration: 0.2,\r\n              }}\r\n              alt=\"\"\r\n              className=\"circle z-depth-3\"\r\n              style={{\r\n                height: \"150px\",\r\n                width: \"150px\",\r\n                marginTop: \"50px\",\r\n              }}\r\n              src={userData.image}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col m12 s12 center-align\" data-tip=\"Your Swapify rating\">\r\n            <motion.div\r\n              animate={{ opacity: 1 }}\r\n              initial={{ opacity: 0 }}\r\n              transition={{ duration: .2, delay: 0.2 }}\r\n              className=\"col m12 s12 center-align\">\r\n              {Array(userRating)\r\n                .fill()\r\n                .map((el, i) => (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    key={i}\r\n                    style={{ color: \"#F25D27\" }}\r\n                  >\r\n                    star\r\n                </i>\r\n                ))}\r\n              {Array(5 - userRating)\r\n                .fill()\r\n                .map((el, i) => (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    key={i}\r\n                    style={{ color: \"#F25D27\" }}\r\n                  >\r\n                    star_border\r\n                </i>\r\n                ))}\r\n            </motion.div>\r\n          \r\n            <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\"/>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <Row className=\"valign-wrapper\">\r\n        </Row>\r\n        <Row>\r\n          <div className=\"col m12 s12 \">\r\n            <motion.h2\r\n              animate={{ opacity: 1 }}\r\n              initial={{ opacity: 0 }}\r\n              transition={{ duration: 1 }}\r\n              style={{ color: \"#03A696\" }}\r\n              className=\"userName\"\r\n            >\r\n\r\n              {userData.firstName} {userData.lastName}\r\n            </motion.h2>\r\n          </div>\r\n        </Row>\r\n      \r\n      <Row className=\"valign-wrapper\">\r\n        <Col m={8} s={8} className=\"right-align\">\r\n          <h4 style={{ color: \"#025159\" }}>Add Item</h4>\r\n        </Col>\r\n        <Col m={6} s={6} className=\"left-align\">\r\n          <Button\r\n            floating={true}\r\n            large={true}\r\n            style={{ backgroundColor: \"#F25D27\" }}\r\n          >\r\n            <Link to={`/createItem/${userData.googleId}`}>\r\n              <i className=\"material-icons\">add</i>\r\n            </Link>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: \"10px\" }}>\r\n        <h3\r\n          style={{\r\n            fontFamily: \"lemon\",\r\n            color: \"#03A696\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          Your Items\r\n          </h3>\r\n\r\n        <Collection style={{ maxHeight: \"1000px\", overflow: \"scroll\" }}>\r\n          {usersItemList.map((item, index) => (\r\n            <ItemCard\r\n              key={index}\r\n              loadItems={loadItems}\r\n              imageURL={item.imageURL}\r\n              itemName={item.itemName}\r\n              id={item._id}\r\n              itemDescription={item.itemDescription}\r\n              userData={userData}\r\n            />\r\n\r\n            // <a href=\"/swipping\" ><button onClick={() => handleUseItem(item._id)} itemId={item._id}>{item.itemName}</button></a>\r\n          ))}\r\n        </Collection>\r\n      </Row>\r\n\r\n      <Row style={{ height: \"400px\" }}></Row>\r\n    </div>\r\n\r\n      {/* <Carousel>\r\n                {usersItemList.map((item, index) => (\r\n\r\n                    <CarouselCard key={index} loadItems={loadItems} imageURL={item.imageURL} itemName={item.itemName} id={item._id} itemDescription={item.itemDescription} />\r\n                ))}\r\n\r\n            </Carousel> */}\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import firebase from \"firebase/app\"\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n    projectId: \"swapify-85d2c\",\r\n    storageBucket: \"swapify-85d2c.appspot.com\",\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst storage = firebase.storage()\r\nconst firestore = firebase.firestore()\r\n\r\nexport { storage, firebase, firestore, firebase as default} ","import React, { useState, useEffect, useContext } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Collection, SideNav, Modal, Button } from 'react-materialize';\r\nimport MatchCard from '../MatchCard'\r\nimport { firestore } from \"../../utils/firebase\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function MatchesSideBar(props) {\r\n    const [usersItemList, setUsersItemList] = useState([]);\r\n    const [matchList, setMatchList] = useState([])\r\n    const [allMatches, setAllMatches] = useState([])\r\n    const [noChats, setNoChats] = useState(false)\r\n    const userData = props.userData\r\n    const { recentText } = useContext(chatContext)\r\n    let matchArray = []\r\n\r\n    useEffect(() => {\r\n        API.getUserItems(userData.googleId).then((response) => {\r\n            setUsersItemList(response.data)\r\n        })\r\n        API.getUserMatches(userData.googleId).then((matchResponse) => {\r\n            if (matchResponse.data.length === 0) {\r\n                setNoChats(true)\r\n            }\r\n            setAllMatches(matchResponse)\r\n            matchResponse.data.forEach(item => {\r\n                if (item.item1Owner === userData.googleId) {\r\n                    const itemInfo = {\r\n                        userItemId: item.item1Id,\r\n                        userId: item.item1Owner,\r\n                        userItemPhoto: item.item1Photo,\r\n                        userItemName: item.item1Name,\r\n                        otherItemId: item.item2Id,\r\n                        otherUser: item.item2Owner,\r\n                        otherItemImage: item.item2Photo,\r\n                        otherItemName: item.item2Name,\r\n                        matchId: item._id,\r\n                        newText: item.item1NewText\r\n                    }\r\n                    matchArray.push(itemInfo)\r\n                    if (matchResponse.data.length === matchArray.length) {\r\n                        getCollectionsMostRecents(matchArray).then((res) => {\r\n                            setMatchList(res)\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n                    const itemInfo = {\r\n                        userItemId: item.item2Id,\r\n                        userId: item.item2Owner,\r\n                        userItemPhoto: item.item2Photo,\r\n                        userItemName: item.item2Name,\r\n                        otherItemId: item.item1Id,\r\n                        otherUser: item.item1Owner,\r\n                        otherItemImage: item.item1Photo,\r\n                        otherItemName: item.item1Name,\r\n                        matchId: item._id,\r\n                        newText: item.item2NewText\r\n                    }\r\n                    matchArray.push(itemInfo)\r\n                    if (matchResponse.data.length === matchArray.length) {\r\n                        getCollectionsMostRecents(matchArray).then((res) => {\r\n                            setMatchList(res)\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }, [recentText, props])\r\n\r\n    \r\n\r\n    const getCollectionsMostRecents = async(newArray) => {\r\n        if (newArray) {\r\n        for (let i = 0; i < newArray.length; i++) {\r\n            const returns = await firestore.collection(`${newArray[i].matchId}`).orderBy(\"createdAt\", 'desc').limit(1).get()\r\n            if (returns._delegate._snapshot.docChanges[0]) {\r\n                newArray[i].latestText = returns._delegate._snapshot.docChanges[0].doc.data.partialValue.mapValue.fields.text.stringValue\r\n                newArray[i].textTime = returns._delegate._snapshot.docChanges[0].doc.data.partialValue.mapValue.fields.createdAt.timestampValue\r\n            }\r\n        }\r\n        let sortedList =  newArray.sort(function compare(a, b) {\r\n            var dateA = new Date(a.textTime);\r\n            var dateB = new Date(b.textTime);\r\n            return dateB - dateA;\r\n        });\r\n        return sortedList\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        getCollectionsMostRecents(matchList).then((res) => {\r\n            setMatchList(res)\r\n        })\r\n\r\n    }, [recentText])\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <SideNav\r\n                fixed={true}\r\n                trigger={<Button floating={true} large={true} className=\"chatSideNavTrigger\"><i class=\"material-icons\">chat</i></Button>}>\r\n                <Collection className=\"chatCollection\">\r\n                    {matchList.map(match => (\r\n                        <MatchCard yourImageUrl={match.userItemPhoto} imageURL={match.otherItemImage} matchData={match} allMatches={allMatches}/>\r\n                    ))}\r\n                </Collection>\r\n            </SideNav>\r\n\r\n            {/* No chats Modal */}\r\n            <Modal\r\n                open={noChats}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                dismissible: false\r\n                }}>\r\n                <h3>No Chats!</h3>\r\n                <br></br>\r\n                <div>You don't have any open chats!</div>\r\n                <div>Go make some matches first!</div>\r\n                <br></br>\r\n                <a href={`/profile/${userData.googleId}`}><Button>Go Back</Button></a>\r\n            </Modal>\r\n        </div>       \r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function ChatMessage(props) {\r\n    const userData = props.userData\r\n    const { text, sentFromid, sentFromPhoto } = props.message;\r\n    const messageClass = sentFromid === userData.googleId ? 'sent' : 'received';\r\n\r\n\r\n    return (\r\n        <div className={`message ${messageClass}`}>\r\n            <img className='itemPhoto' src={sentFromPhoto} />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\nimport { Col, Row, Button, Modal } from 'react-materialize';\r\nimport API from '../../utils/API'\r\nimport { firebase, firestore } from \"../../utils/firebase\"\r\nimport ChatMessage from \"../ChatMessage\"\r\nimport chatContext from \"../../utils/chatContext\"\r\nimport \"./style.css\"\r\nimport Rating from 'react-rating'\r\n\r\nexport default function ChatRoom(props) {\r\n    const userData = props.userData\r\n    const { chatId, setNewText } = useContext(chatContext)\r\n    const [messagesRef, setMessagesRef] = useState(firestore.collection('empty'))\r\n    const query = messagesRef.orderBy('createdAt')\r\n    const [messages] = useCollectionData(query, {idField: 'id'})\r\n    const [formValue, setFormValue] = useState('')\r\n    const dummy = useRef()\r\n    const [userItem, setUserItem] = useState({})\r\n    const [otherItem, setOtherItem] = useState({})\r\n    const messagesEndRef = React.createRef()\r\n    const [openRateModal, setOpenRateModal] = useState(false)\r\n    const [rating, setRating] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setMessagesRef(firestore.collection(chatId.matchId || 'empty'))\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                setUserItem({id: matchResponse.data.item1Owner, photoURL: matchResponse.data.item1Photo})\r\n                setOtherItem({id: matchResponse.data.item2Owner, photoURL: matchResponse.data.item2Photo})\r\n            }\r\n            else {\r\n                setUserItem({id: matchResponse.data.item2Owner, photoURL: matchResponse.data.item2Photo})\r\n                setOtherItem({id: matchResponse.data.item1Owner, photoURL: matchResponse.data.item1Photo})\r\n            }\r\n        })\r\n        setTimeout(function () {\r\n            dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n          }, 500)\r\n    }, [chatId])\r\n\r\n\r\n    const sendMessage = async(e) => {\r\n        e.preventDefault();\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                const matchData = {\r\n                    item2NewText: true,\r\n                    item1NewText: false\r\n                }\r\n                API.updateUserMatch(chatId.matchId, matchData)\r\n            }\r\n            else {\r\n                const matchData = {\r\n                    item1NewText: true,\r\n                    item2NewText: false\r\n                }\r\n                API.updateUserMatch(chatId.matchId, matchData)\r\n            }\r\n        })\r\n\r\n\r\n        setNewText(formValue)\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            sentFromid: userItem.id,\r\n            sentToid: otherItem.id,\r\n            sentFromPhoto: userItem.photoURL,\r\n            setToPhoto: otherItem.photoURL\r\n        })\r\n        setFormValue('')\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    function swapItems() {\r\n        API.getMatch(chatId.matchId).then((matchResponse) => {\r\n            console.log(matchResponse)\r\n            if (matchResponse.data.item1Owner === userData.googleId) {\r\n                API.deleteMatchesForItem(matchResponse.data.item1Id).then((res) => {\r\n                    API.deleteItem(matchResponse.data.item1Id).then((delResponse) => {\r\n                        API.updateItem(matchResponse.data.item2Id, {deleteItem: matchResponse.data.item1Owner}).then((updateRes) => {\r\n                            setOpenRateModal(true)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                API.deleteMatchesForItem(matchResponse.data.item2Id).then((res) => {\r\n                    API.deleteItem(matchResponse.data.item2Id).then((delResponse) => {\r\n                        API.updateItem(matchResponse.data.item1Id, {deleteItem: matchResponse.data.item2Owner}).then((updateRes) => {\r\n                            setOpenRateModal(true)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function deleteMatch() {\r\n        API.deleteMatch(chatId.matchId).then((res) => {\r\n            setOpenRateModal(true)\r\n        })\r\n    }\r\n\r\n    function reloadPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n    function submitRating() {\r\n        API.getUser(otherItem.id).then((userResponse) => {\r\n            const ratingArray = userResponse.data[0].rating\r\n            ratingArray.push(rating)\r\n            const newUserRating = {\r\n                rating: ratingArray\r\n            }\r\n            API.updateUser(otherItem.id, newUserRating).then((res) => {\r\n                window.location.reload();\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"container\">\r\n            {/* Rate User */}\r\n            <Modal\r\n                open={openRateModal}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                dismissible: false\r\n                }}>\r\n                <h3>Match Deleted!</h3>\r\n                <br></br>\r\n                <div>Would you like to rate the other user?</div>\r\n                <br></br>\r\n                <Rating\r\n                    emptySymbol={<i className=\"material-icons\">star_border</i>}\r\n                    fullSymbol={<i className=\"material-icons\">star</i>}\r\n                    onChange={(e) => setRating(e)}\r\n                ></Rating>\r\n                <br></br><br></br>\r\n                <a><Button onClick={submitRating} modal=\"close\">Submit Rating</Button></a>\r\n                <br></br><br></br>\r\n                <a><Button onClick={reloadPage} modal=\"close\">No Thanks</Button></a>\r\n            </Modal>\r\n            <Row className=\"wrapper\">\r\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} userData={userData}/>)}\r\n                <div ref={dummy}></div>\r\n                <div ref={messagesEndRef} />\r\n                <br></br><br></br><br></br><br></br><br></br>\r\n            </Row>\r\n        \r\n        <div className=\"chatControls\">\r\n            <Row>\r\n                <Col s={12}>\r\n                    <form onSubmit={sendMessage}>   \r\n                        <Col s={10}>\r\n                        <input value={formValue} required className=\"chatForm\" onChange={(e) => setFormValue(e.target.value)}/>\r\n                        </Col>\r\n                        <Col s={2}>\r\n                        <button type=\"submit\" className=\"btn-floating btn-large waves-effect waves-light sendButton\"><i className=\"material-icons\">send</i></button>\r\n                        </Col>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col s={6} className='center-align'>\r\n                    <Modal\r\n                        className=\"center-align\"\r\n                        id=\"Modal-Swap\"\r\n                        trigger={<Button node=\"button\" className=\"swapItemsButton\">SWAP ITEMS</Button>}\r\n                    >\r\n                        <h3>Swap Items?</h3>\r\n                        <br></br>\r\n                        <div>If you press confirm your item will be no longer listed on Swapify. Only do this after swapping items.</div>\r\n                        <br></br><br></br>\r\n                        <a><Button onClick={swapItems} modal=\"close\">Confirm</Button></a>\r\n                    </Modal>\r\n                </Col>\r\n                <Col s={6} className='center-align'>\r\n                    <Modal\r\n                        className=\"center-align\"\r\n                        id=\"Modal-Swap\"\r\n                        trigger={<Button node=\"button\" className=\"deleteMatchButton\">DELETE MATCH</Button>}\r\n                    >\r\n                        <h3>Delete Match?</h3>\r\n                        <br></br>\r\n                        <div>If you press confirm your match will be deleted from Swapify.</div>\r\n                        <br></br><br></br>\r\n                        <a><Button onClick={deleteMatch} modal=\"close\">Confirm</Button></a>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { Col, Row} from 'react-materialize';\r\nimport MatchesSideBar from \"../components/MatchesSideBar\"\r\nimport ChatRoom from \"../components/ChatRoom\"\r\nimport API from \"../utils/API\"\r\nimport chatContext from \"../utils/chatContext\";\r\nimport \"./chatStyle.css\"\r\n\r\n\r\nfunction ChatApp() {\r\n\r\n    const [chatId, setChatId] = useState('empty')\r\n    const [recentText, setRecentText] = useState('')\r\n    const [notNewText, setNotNewText] = useState(2)\r\n    const [userData, setUserData] = useState({email: \"\",\r\n        firstName: \"\",\r\n        googleId: \"\",\r\n        image: \"\",\r\n        lastName: \"\",\r\n        listedItems: [],\r\n        rating: []}\r\n    )\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        API.getUser(id).then((res) => {\r\n            const newUser = {\r\n                email: res.data[0].email,\r\n                firstName: res.data[0].firstName,\r\n                googleId: res.data[0].googleId,\r\n                image: res.data[0].image,\r\n                lastName: res.data[0].lastName,\r\n                listedItems: res.data[0].listedItems,\r\n                rating: res.data[0].rating\r\n            }\r\n            setUserData(newUser)\r\n        })\r\n    }, [])\r\n\r\n    function setChat(id) {\r\n        setChatId(id)\r\n        API.getMatch(id.matchId).then((res) => {\r\n            if ((userData.googleId === res.data.item1Owner) && (res.data.item1NewText === true)) {\r\n                const matchData = {\r\n                    item1NewText: false\r\n                }\r\n                API.updateUserMatch(id.matchId, matchData)\r\n                setNotNewText(Math.floor(Math.random() * 100000))\r\n            }\r\n            else if ((userData.googleId === res.data.item2Owner) && (res.data.item2NewText === true)) {\r\n                const matchData = {\r\n                    item2NewText: false\r\n                }\r\n                API.updateUserMatch(id.matchId, matchData)\r\n                setNotNewText(Math.floor(Math.random() * 100000))\r\n            }\r\n        })\r\n    }\r\n\r\n    function setNewText(text) {\r\n        setRecentText(text)\r\n    }\r\n\r\n    return (\r\n        <div className=\"chatBackground\">\r\n        <chatContext.Provider value={{chatId, recentText, setChat, setNewText }}>\r\n            <Row>\r\n                <Col s={0} m={4}>\r\n                    <MatchesSideBar newText={notNewText} userData={userData}/>\r\n                </Col>\r\n                <Col s={12} m={8}>\r\n                    <ChatRoom userData={userData}/>\r\n                </Col>\r\n            </Row>\r\n        </chatContext.Provider>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatApp;","import React from \"react\";\r\nimport {Button} from 'react-materialize';\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control materialize-textarea\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{display: \"block\", width: \"100%\", marginBottom: 10, backgroundColor: \"#F28705\", height: \"50px\" }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport { storage } from \"../utils/firebase\"\r\nimport { Redirect, useParams, BrowserRouter as Router } from 'react-router-dom';\r\nimport Compressor from 'compressorjs';\r\nimport Confetti from 'react-dom-confetti';\r\nimport {Col, Row} from 'react-materialize';\r\n\r\n\r\nfunction Item() {\r\n  const [reward, setReward]= useState(false);\r\n  const [descriptionState, setDescriptionState] = useState([]);\r\n  const [nameState, setNameState] = useState([]);\r\n  const [image, setImage] = useState(null)\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [buttonText, setButtonText] = useState(\"Preview\");\r\n  const [userLocation, setUserLocation] = useState([\"\"])\r\n  const [wait, setWait]= useState(false);\r\n  const { id } = useParams()\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    googleId: \"\",\r\n    image: \"\",\r\n    lastName: \"\",\r\n    listedItems: [],\r\n    rating: []}\r\n)\r\n\r\n  useEffect(() => {\r\n\r\n    API.getUser(id).then((res) => {\r\n      const newUser = {\r\n          email: res.data[0].email,\r\n          firstName: res.data[0].firstName,\r\n          googleId: res.data[0].googleId,\r\n          image: res.data[0].image,\r\n          lastName: res.data[0].lastName,\r\n          listedItems: res.data[0].listedItems,\r\n          rating: res.data[0].rating\r\n      }\r\n      setUserData(newUser)\r\n    })\r\n    if (userData === null) {\r\n      setRedirect(true)\r\n    }\r\n    const fileUpload = document.getElementById('fileBox');\r\n    fileUpload.addEventListener('click', function (event) {\r\n    });\r\n\r\n    getUserLocation()\r\n  }, [])\r\n\r\n  function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(saveUserLocation);\r\n    } else {\r\n      alert = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n\r\n  function saveUserLocation(position) {\r\n    setUserLocation([position.coords.latitude, position.coords.longitude])\r\n  }\r\n\r\n  //sets the selectedFile state when a a user drops in a file.\r\n  function handleFileChange(e) {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0])\r\n    }\r\n  };\r\n\r\n  function handleDescriptionChange(event) {\r\n    const desc = event.target.value;\r\n    setDescriptionState({ ...descriptionState, description: desc })\r\n  };\r\n\r\n  function handleNameChange(event) {\r\n    const name = event.target.value;\r\n    setNameState({ ...nameState, name: name })\r\n  }\r\n\r\n  function previewUploadHandler() {\r\n\r\n\r\n    if (buttonText === \"Preview\") {\r\n      previewHandler();\r\n      setButtonText(\"Upload\")\r\n    }\r\n    else {\r\n      fileUploadHandler()\r\n     \r\n    }\r\n\r\n  }\r\n const fileUploadHandler = ()=> {\r\n\r\n    // Compress image before uploading to firebase\r\n    new Compressor(image, {\r\n      quality: 0.2,\r\n      success(result) {\r\n        \r\n\r\n        // uploads image to firebase\r\n        const randomNumber = Math.floor(Math.random() * 100000000)\r\n        const uploadTask = storage.ref(`images/${randomNumber + image.name}`).put(result)\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => { },\r\n          error => {\r\n            console.log(error)\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(randomNumber + image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                saveToDatabase(url, image.name);\r\n                setImageURL(url);\r\n                console.log(\"fileupload handler run\")\r\n                //setButtonText(\"Preview\")\r\n                setReward(!reward)\r\n                setTimeout(()=> setWait(true),3000 )\r\n                \r\n                // window.location.href=\"/profile\"\r\n                \r\n\r\n              })\r\n          }\r\n        )\r\n\r\n      },\r\n      error(err) {\r\n        console.log(err.message);\r\n      },\r\n    });\r\n\r\n  };\r\n\r\n  function previewHandler() {\r\n\r\n    // Compress image before uploading to firebase\r\n    new Compressor(image, {\r\n      quality: 0.8,\r\n      success(result) {\r\n\r\n        // uploads image to firebase\r\n        const randomNumber = Math.floor(Math.random() * 100000000)\r\n        const uploadTask = storage.ref(`images/${randomNumber + image.name}`).put(result)\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => { },\r\n          error => {\r\n            console.log(error)\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(\"images\")\r\n              .child(randomNumber + image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                //saveToDatabase(url);\r\n                setImageURL(url);\r\n\r\n              })\r\n          }\r\n        )\r\n\r\n      },\r\n      error(err) {\r\n        console.log(err.message);\r\n      },\r\n    });\r\n\r\n  };\r\n\r\n  function saveToDatabase(url, imageName) {\r\n    const splitURL = imageName.split(\".\")\r\n    const newImageName = (splitURL[0] + \"_500x500.\" + splitURL[1])\r\n    const newURL = url.replace(imageName, newImageName)\r\n    const newItem = {\r\n      itemName: nameState.name,\r\n      itemDescription: descriptionState.description,\r\n      itemPrice: 45,\r\n      imageURL: `${newURL}`,\r\n      itemOwner: userData.googleId,\r\n      likesFromItems: [],\r\n      likesItems: [],\r\n      seenItems: [],\r\n      itemLocation: userLocation\r\n    }\r\n    API.saveItem(newItem).then((itemResponse) => {\r\n      const itemId = itemResponse.data._id\r\n      API.getUser(userData.googleId).then((res) => {\r\n        const updatedUser = {\r\n          listedItems: res.data[0].listedItems\r\n        }\r\n        updatedUser.listedItems.push(itemId)\r\n        API.updateUser(userData.googleId, updatedUser)\r\n        console.log(\"save to database run\")\r\n\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    // this cant be a form for some reason?\r\n    <div className=\"container\" style={{ marginTop: \"50px\" }}>\r\n      {redirect ? (<Redirect push to=\"/\" />) : null}\r\n\r\n      <TextArea\r\n        onChange={handleNameChange}\r\n        name=\"name\"\r\n        placeholder=\"Add a name for your item\"\r\n        style={{color:\"#025159\"}}\r\n        \r\n      />\r\n      <form action=\"#\">\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn\" style={{ color: \"#D4EEE3\" }}>\r\n            {/* <span>File</span> */}\r\n            <input type=\"file\" id=\"fileBox\" onChange={handleFileChange} style={{ color: \"#03A696\" }}/>\r\n            <i class=\"material-icons\">file_upload</i>\r\n            \r\n\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" placeholder=\"Choose a photo\" style={{color:\"#025159\"}} />\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"center-align\">\r\n        {imageURL && <img className=\"responsive-img\" src={imageURL} style={{ maxWidth: \"50%\", height: \"auto\" }} />}\r\n        \r\n      </div>\r\n\r\n      <TextArea\r\n        onChange={handleDescriptionChange}\r\n        name=\"description\"\r\n        placeholder=\"Add a description\"\r\n        style={{color:\"#025159\"}}\r\n      />\r\n      <div className=\"container right-align\" >\r\n      <Row>\r\n        <Col s={6} m={6}>\r\n      \r\n      </Col>\r\n      <Col s={6} m={6}><Confetti id=\"confetti\" active={ reward } className=\"right-align\"/></Col>\r\n      </Row>\r\n      </div>\r\n      \r\n        <FormBtn\r\n          // disabled={!(formObject.author && formObject.title)}\r\n          //onClick={fileUploadHandler}\r\n          id=\"mainFileBtn\"\r\n          onClick={previewUploadHandler}\r\n          style={{ display: \"block\", width: \"100%\" }}\r\n        >{buttonText}\r\n        </FormBtn>\r\n       \r\n        {wait ? <Redirect to = {`/profile/${userData.googleId}`}/> : \"\"}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Item;\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function SwipingCard(props) {\r\n    return (\r\n        <div class=\"card swipCard center-align\">\r\n            <div class=\"card-image swipCard center-align\">\r\n                <img className=\"cardImage center-align\" draggable=\"false\"src={props.itemInfo.imageURL} />\r\n            </div>\r\n            <div class=\"card-content\">\r\n                <span class=\"card-title\">{props.itemInfo.itemName}</span>\r\n                <div>{props.itemInfo.itemDescription}</div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Slider, { SliderTooltip } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\n\r\nfunction DistanceSlider(distance) {\r\n    const { createSliderWithTooltip } = Slider;\r\n    const Range = createSliderWithTooltip(Slider.Range);\r\n    const { Handle } = Slider;\r\n\r\n    const handle = props => {\r\n    const { value, dragging, index, ...restProps } = props;\r\n    return (\r\n        <SliderTooltip\r\n        prefixCls=\"rc-slider-tooltip\"\r\n        overlay={`${value} Miles`}\r\n        visible={dragging}\r\n        placement=\"top\"\r\n        key={index}\r\n        >\r\n        <Handle value={value} {...restProps} />\r\n        </SliderTooltip>\r\n    );\r\n    };\r\n\r\n    const wrapperStyle = { width: 400, margin: 50 };\r\n\r\n    return (  \r\n    <div>\r\n        <div className=\"center-align\">\r\n        <Slider min={0} max={50} defaultValue={distance.distanceBoundary} handle={handle} onAfterChange={(e) => distance.setDistanceBoundary(e)}/>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DistanceSlider","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { Button, Modal, Row, Col, Card, CardTitle } from 'react-materialize';\r\nimport  {motion, useMotionValue, useTransform } from \"framer-motion\"\r\nimport SwipingCard from \"../components/SwipingCard\"\r\nimport DistanceSlider from '../components/DistanceSlider'\r\nimport API from \"../utils/API\";\r\nimport \"./style.css\"\r\nlet preventFirstRender = false\r\n\r\nfunction Swipping() {\r\n    let startingDragPoint = {}\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [notUserItems, setNotUserItems] = useState([])\r\n    const [currentItem, setCurrentItem] = useState([])\r\n    const [noMoreItems, setNoMoreItems] = useState(false)\r\n    const [imageNumber, setImageNumber] = useState(0)\r\n    const [itIsAMatch, setItIsAMatch] = useState(false)\r\n    const [distanceBoundary, setDistanceBoundary] = useState(50)\r\n    const [modalMatchImage1, setModalMatchImage1] = useState('')\r\n    const [modalMatchImage2, setModalMatchImage2] = useState('')\r\n    const { id, item } = useParams()\r\n    const itemData = item\r\n    const [userData, setUserData] = useState({\r\n        email: \"\",\r\n        firstName: \"\",\r\n        googleId: \"\",\r\n        image: \"\",\r\n        lastName: \"\",\r\n        listedItems: [],\r\n        rating: []}\r\n    )\r\n\r\n    useEffect(() => {\r\n        API.getUser(id).then((res) => {\r\n            const newUser = {\r\n                email: res.data[0].email,\r\n                firstName: res.data[0].firstName,\r\n                googleId: res.data[0].googleId,\r\n                image: res.data[0].image,\r\n                lastName: res.data[0].lastName,\r\n                listedItems: res.data[0].listedItems,\r\n                rating: res.data[0].rating\r\n            }\r\n            setUserData(newUser)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        // Sets all user's items to user's current location\r\n        const getCoords = async () => {\r\n            const pos = await new Promise((resolve, reject) => {\r\n              navigator.geolocation.getCurrentPosition(resolve, reject);\r\n            });\r\n            return [pos.coords.latitude, pos.coords.longitude]\r\n        };\r\n        const coords = getCoords().then((res) => {\r\n            API.getUserItems(userData.googleId).then((userItemsResponse) => {\r\n                for (let z = 0; z < userItemsResponse.data.length; z++) {\r\n                    const newCoords = {\r\n                        itemLocation: res\r\n                    }\r\n                    API.updateItem(userItemsResponse.data[z]._id, newCoords)\r\n                }\r\n            })\r\n        });\r\n\r\n        if (userData === null) {\r\n            setRedirect(true)\r\n        }\r\n        API.getAllItems().then((res) => {\r\n            // filters out selected item so it cant see itself\r\n            const notUserItemsArray = res.data.filter(item => (\r\n                (item.itemOwner !== id)\r\n            ))\r\n            // filters out already seen items\r\n            API.getItem(itemData).then((response) => {\r\n                const seenItems = response.data.seenItems\r\n                for (let i = 0; i < seenItems.length; i++) {\r\n                    for (let p = 0; p < notUserItemsArray.length; p++) {\r\n                        if (seenItems[i] === notUserItemsArray[p]._id) {\r\n                            notUserItemsArray.splice(p, 1)\r\n                            if (notUserItemsArray.length === 0) {\r\n                                setNoMoreItems(true)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // moves items that like current item to front of list\r\n                for (let q = 0; q < notUserItemsArray.length; q++) {\r\n                    if (notUserItemsArray[q].likesItems.includes(itemData)) {\r\n                        notUserItemsArray.unshift(notUserItemsArray.splice(q, 1)[0])\r\n                    }\r\n                }\r\n\r\n                API.getItem(itemData).then((userItemRes) => {\r\n                    console.log(userItemRes)\r\n                    const sortedNotUserItems = []\r\n                     // Sorting by Location\r\n                     for (let v = 0; v < notUserItemsArray.length; v++) {\r\n                         const notUserLat = notUserItemsArray[v].itemLocation[0]\r\n                         const notUserLong = notUserItemsArray[v].itemLocation[1]\r\n                         const userLat = userItemRes.data.itemLocation[0]\r\n                         const userLong = userItemRes.data.itemLocation[1]\r\n\r\n                        getDistanceFromLatLonInKm(notUserLat, notUserLong, userLat, userLong).then((distanceResponse) => {\r\n                            if (distanceResponse < distanceBoundary) {\r\n                                sortedNotUserItems.push(notUserItemsArray[v])\r\n                            }\r\n                            // no more items triggers Modal\r\n                            if (sortedNotUserItems.length === 0) {\r\n                                console.log(sortedNotUserItems)\r\n                                setNoMoreItems(true)\r\n                            }\r\n                            else {\r\n                                setNotUserItems(sortedNotUserItems)\r\n                                setCurrentItem(sortedNotUserItems[imageNumber])\r\n                            }\r\n                        })\r\n                     }\r\n                })\r\n            })\r\n        })\r\n    }, [distanceBoundary])\r\n\r\n    // Haversine Formula\r\n    const getDistanceFromLatLonInKm = async(lat1,lon1,lat2,lon2) => {\r\n        var R = 6371; // Radius of the earth in km\r\n        var dLat = deg2rad(lat2-lat1);  // deg2rad below\r\n        var dLon = deg2rad(lon2-lon1); \r\n        var a = \r\n          Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n          Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \r\n          Math.sin(dLon/2) * Math.sin(dLon/2)\r\n          ; \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n        var d = R * c; // Distance in km\r\n        return (d / 1.609344); // Convert to Miles\r\n    }\r\n      \r\n    function deg2rad(deg) {\r\n        return deg * (Math.PI/180)\r\n    }\r\n\r\n    // runs every time the imageNumber state changes\r\n    useEffect(() => {\r\n        if (preventFirstRender === true) {\r\n            if (imageNumber === notUserItems.length) {\r\n                setNoMoreItems(true)\r\n            }\r\n            else {\r\n                setCurrentItem(notUserItems[imageNumber])\r\n            }\r\n        }\r\n    }, [imageNumber])\r\n\r\n    function handleItemNotLike() {\r\n        preventFirstRender = true\r\n        API.getItem(itemData).then((res) => {\r\n            const updatedItemData = {\r\n                seenItems: res.data.seenItems\r\n            }\r\n            updatedItemData.seenItems.push(currentItem._id)\r\n            API.updateItem(itemData, updatedItemData).then((res) => {\r\n                setImageNumber(imageNumber + 1)\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleItemLike() {\r\n        preventFirstRender = true\r\n        // get item data, add to it, then do a put. Then do it for second item\r\n        API.getItem(itemData).then((userItemResponse) => {\r\n            const updatedItemData = {\r\n                seenItems: userItemResponse.data.seenItems,\r\n                likesItems: userItemResponse.data.likesItems\r\n            }\r\n            updatedItemData.seenItems.push(currentItem._id)\r\n            updatedItemData.likesItems.push(currentItem._id)\r\n            API.updateItem(itemData, updatedItemData).then((res) => {\r\n                API.getItem(currentItem._id).then((currentItemResponse) => {\r\n                    console.log(currentItemResponse)\r\n                    const updatedItemData1 = {\r\n                        likesFromItems: currentItemResponse.data.likesFromItems\r\n                    }\r\n                    updatedItemData1.likesFromItems.push(itemData)\r\n                    API.updateItem(currentItem._id, updatedItemData1).then((res) => {\r\n                        // once updated, check if there is a match\r\n                        for (let i = 0; i < userItemResponse.data.likesFromItems.length; i++) {\r\n                            if (userItemResponse.data.likesFromItems[i] === currentItem._id) {\r\n                                setItIsAMatch(true)\r\n                                setModalMatchImage1(userItemResponse.data.imageURL)\r\n                                setModalMatchImage2(currentItem.imageURL)\r\n                                const matchData = {\r\n                                    item1Id: itemData,\r\n                                    item1Owner: userData.googleId,\r\n                                    item1Photo: userItemResponse.data.imageURL,\r\n                                    item1Name: userItemResponse.data.itemName,\r\n                                    item2Id: currentItem._id,\r\n                                    item2Owner: currentItemResponse.data.itemOwner,\r\n                                    item2Photo: currentItemResponse.data.imageURL,\r\n                                    item2Name: currentItemResponse.data.itemName,\r\n                                    item2Read: false\r\n                                }\r\n                                API.postMatch(matchData).then((matchRes) => {\r\n                                })\r\n                            }\r\n                        }\r\n                        setImageNumber(imageNumber + 1)\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleDistanceChange(e) {\r\n        setDistanceBoundary(e)\r\n    }\r\n\r\n    const x = useMotionValue(0)\r\n    const background = useTransform(\r\n        x,\r\n        [-100, 0, 100],\r\n        [\"#FF0000\", \"#FFFFFF\", \"#00FF00\"]\r\n    )\r\n\r\n    function processDragInfo(x, y) {\r\n        console.log(\"ending: \", x, y)\r\n        console.log(startingDragPoint)\r\n        if ((startingDragPoint * 1.8) < x) {\r\n            console.log(\"likes\")\r\n            handleItemLike()\r\n        }\r\n        else if ((startingDragPoint / 2) > x) {\r\n            console.log('doesnt like')\r\n            handleItemNotLike()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { redirect ? (<Redirect push to=\"/\" />) : null}\r\n            <div className=\"container center-align\" style={{ marginTop: \"20px\" }}>\r\n                <Row>\r\n                    <Col m={3} l={4}></Col>\r\n                    <Col s={12} m={6} l={4}>\r\n                        <motion.div style={{ background }} className=\"swipBackground\">\r\n                            <motion.div\r\n                            drag=\"x\"\r\n                            dragConstraints={{ left: 0, right: 0 }}\r\n                            style={{ x }}\r\n                            onDragStart={\r\n                                (event, info) => startingDragPoint = (info.point.x)\r\n                            }\r\n                            onDragEnd={\r\n                                (event, info) => processDragInfo(info.point.x, info.point.y)\r\n                            }\r\n                            >\r\n                                <Row>\r\n                                    {/* <Col s={1}></Col> */}\r\n                                    <Col s={12}>\r\n                                        <SwipingCard itemInfo={currentItem}/>\r\n                                    </Col>\r\n                                    {/* <Col s={1}></Col> */}\r\n                                </Row>\r\n                                \r\n                            </motion.div>\r\n                        </motion.div>\r\n                    </Col>\r\n                    <Col m={3} l={4}></Col>\r\n                </Row>\r\n                <Row className=\"center-align\">\r\n                    <Col s={3}></Col>\r\n                    <Col s={6}>\r\n                    <DistanceSlider className=\"center-align\" setDistanceBoundary={handleDistanceChange} distanceBoundary={distanceBoundary}/>\r\n                    </Col>\r\n                    <Col s={3}></Col>\r\n                </Row>\r\n            </div>\r\n            {/* No more items to swap modal */}\r\n            <Modal\r\n                open={noMoreItems}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    dismissible: false\r\n                }}\r\n                >\r\n                <h3>No more items available!</h3>\r\n                <br></br>\r\n                <div>Add a new item, switch items to swap with, or try back later!</div>\r\n                <br></br><br></br>\r\n                <a href={`/profile/${userData.googleId}`}><Button>Back to my Profile</Button></a>\r\n                <br></br>\r\n            </Modal>\r\n            \r\n            {/* It's a match! */}\r\n            <Modal\r\n                open={itIsAMatch}\r\n                className='center-align'\r\n                actions={[]}\r\n                options={{\r\n                    dismissible: false\r\n                }}\r\n                >\r\n                <h3>It's a match!</h3>\r\n                <img src={modalMatchImage1} className=\"circle swapItemImage\"></img>\r\n                <img src={modalMatchImage2} className=\"circle swapItemImage\"></img>\r\n                <br></br>\r\n                <div>Head to the chat page or continue swipping!</div>\r\n                <br></br><br></br>\r\n                <a href={`/chat/${userData.googleId}`}><Button>Chat Page</Button></a>\r\n                <br></br><br></br>\r\n                <a><Button modal=\"close\">Continue</Button></a>\r\n                <br></br>   \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Swipping;","import React, { useEffect, useState } from \"react\";\r\nimport 'materialize-css';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Navbar, Icon, NavItem } from \"react-materialize\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\n\r\nconst CustomNavbar = (props) => {\r\nconst [ newText, setNewText ] = useState(false)\r\nconst [userData, setUserData] = useState({})\r\nconst [centerLogo, setCenterLogo] = useState(false)\r\nconst [ deleteNavbarLinks, setDeleteNavbarLinks ] = useState(false)\r\nconst { pathname } = useLocation();\r\nconst pathway = pathname.split(\"/\")\r\nconst id = pathway[pathway.length - 1]\r\n\r\nuseEffect(() => {\r\n    checkForNewTexts()\r\n    setInterval(function() {\r\n        checkForNewTexts()\r\n    }, 5000)\r\n}, [userData])\r\n\r\nuseEffect(() => {\r\n  if (pathway[1] === 'chat') {\r\n    setCenterLogo(true)\r\n  }\r\n  else {\r\n    setCenterLogo(false)\r\n  }\r\n  if (pathname === '/') {\r\n    setDeleteNavbarLinks(true)\r\n  }\r\n  else {\r\n    setDeleteNavbarLinks(false)\r\n  }\r\n}, [pathname])\r\n\r\nuseEffect(() => {\r\n  if (id) {\r\n    API.getUser(id).then((res) => {\r\n        const newUser = {\r\n            email: res.data[0].email,\r\n            firstName: res.data[0].firstName,\r\n            googleId: res.data[0].googleId,\r\n            image: res.data[0].image,\r\n            lastName: res.data[0].lastName,\r\n            listedItems: res.data[0].listedItems,\r\n            rating: res.data[0].rating\r\n        }\r\n        setUserData(newUser)\r\n    })\r\n  }\r\n}, [])\r\n\r\nfunction checkForNewTexts() {\r\n    let trueCount = 0;\r\n    if (userData) {\r\n        API.getUserMatches(userData.googleId).then((response) => {\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                if ((response.data[i].item1Owner === userData.googleId) && (response.data[i].item1NewText === true)) {\r\n                    trueCount++\r\n                }\r\n                else if ((response.data[i].item2Owner === userData.googleId) && (response.data[i].item2NewText === true)) {\r\n                    trueCount++\r\n                }\r\n            }\r\n            if (trueCount === 0) {\r\n                setNewText(false)\r\n            }\r\n            else {\r\n                setNewText(true)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n  if (deleteNavbarLinks === true) {\r\n    return (\r\n      <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"./../img/swapifyLogoTopDark-vector.png\" height=\"125\" />\r\n        </a>\r\n      }\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      \r\n    </Navbar>\r\n    )\r\n  }\r\n  else if (centerLogo === true) {\r\n    return (\r\n      <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"./../img/swapifyLogoTopDark-vector.png\" height=\"125\" />\r\n        </a>\r\n      }\r\n      centerLogo\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      <NavItem\r\n        tooltip=\"Add Item\"\r\n        href={`/createItem/${userData.googleId}`}\r\n        className=\"addItem\"\r\n        alt-text=\"add item\"\r\n        node=\"button\"\r\n      >\r\n        <Icon tooltip=\"Add Item\" node=\"button\">\r\n          add_circle\r\n        </Icon>\r\n      </NavItem>\r\n      <NavItem href={`/profile/${userData.googleId}`} className=\"profile\">\r\n        <Icon>person</Icon>\r\n      </NavItem>\r\n      <NavItem href={`/chat/${userData.googleId}`} className=\"swapIconWrapper\">\r\n        {newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        )}\r\n      </NavItem>\r\n    </Navbar>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n    <Navbar\r\n      alignLinks=\"right\"\r\n      brand={\r\n        <a className=\"brand-logo\" href=\"/\">\r\n          <img src=\"../../img/swapifyLogoTopDark-vector.png\" height=\"125\" />\r\n        </a>\r\n      }\r\n      centerChildren\r\n      className=\"navbar transparent z-depth-0\"\r\n      id=\"mobile-nav\"\r\n      menuIcon={\r\n        newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">menu</Icon>\r\n          </Badge>\r\n        )\r\n      }\r\n      options={{\r\n        draggable: true,\r\n        edge: \"right\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      <NavItem\r\n        tooltip=\"Add Item\"\r\n        href={`/createItem/${userData.googleId}`}\r\n        className=\"addItem\"\r\n        alt-text=\"add item\"\r\n        node=\"button\"\r\n      >\r\n        <Icon tooltip=\"Add Item\" node=\"button\">\r\n          add_circle\r\n        </Icon>\r\n      </NavItem>\r\n      <NavItem href={`/profile/${userData.googleId}`} className=\"profile\">\r\n        <Icon>person</Icon>\r\n      </NavItem>\r\n      <NavItem href={`/chat/${userData.googleId}`} className=\"swapIconWrapper\">\r\n        {newText ? (\r\n          <Badge variant=\"dot\" color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"secondary\" className=\"chatBadge\">\r\n            <Icon className=\"swapIcon\">all_inclusive</Icon>\r\n          </Badge>\r\n        )}\r\n      </NavItem>\r\n    </Navbar>\r\n    )\r\n  }\r\n \r\n};\r\n\r\nexport default CustomNavbar;\r\n","import React from \"react\";\r\nimport \"materialize-css\";\r\nimport { Footer } from \"react-materialize\";\r\nimport \"./style.css\";\r\n\r\nconst CustomFooter = (props) => {\r\n  return (\r\n    <div className=\"stickyFooter center\">\r\n      <Footer\r\n      copyrights=\"&copy; 2021 Swapify\">\r\n      </Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomFooter;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport Welcome from \"./pages/welcome\"\r\nimport Profile from \"./pages/profile\"\r\nimport Chat from \"./pages/chat\"\r\nimport createItem from \"./pages/createItem\"\r\nimport Swipping from \"./pages/swipping\"\r\nimport CustomNavbar from './components/Navbar';\r\nimport CustomFooter from './components/Footer';\r\nimport API from \"./utils/API\"\r\nimport { Button, Modal } from 'react-materialize';\r\nimport Rating from 'react-rating'\r\nimport \"./appStyle.css\"\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const pathway = pathname.split(\"/\")\r\n  const id = pathway[pathway.length - 1]\r\n  const [openSwapModal, setOpenSwapModal] = useState(false)\r\n  const [openMatchModal, setOpenMatchModal] = useState(false)\r\n  const [modalImage, setModalImage] = useState('');\r\n  const [modalID, setModalID] = useState('')\r\n  const [modalMatchImage1, setModalMatchImage1] = useState('')\r\n  const [modalMatchImage2, setModalMatchImage2] = useState('')\r\n  const [openRateModal, setOpenRateModal] = useState(false)\r\n  const [rating, setRating] = useState(0)\r\n  const [deletedItemUserId, setDeletedItemUserId] = useState('')\r\n  \r\n  \r\n  setInterval(function () {\r\n    if (id) {\r\n      API.getUserItems(id).then((response) => {\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].deleteItem !== 'false') {\r\n            setDeletedItemUserId(response.data[i].deleteItem)\r\n            setModalImage(response.data[i].imageURL)\r\n            setModalID(response.data[i]._id)\r\n            setOpenSwapModal(true)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }, 5000)\r\n\r\n  setInterval(function () {\r\n    if (id) {\r\n      API.getUserMatches(id).then((response) => {\r\n          // checks if matches have been read or not by user2 (the user that was not swipping when the match was made)\r\n          for (let i = 0; i < response.data.length; i++) {\r\n              if ((response.data[i].item2Owner == id) && (response.data[i].item2Read === false)) {\r\n                  const matchData = {\r\n                      item2Read: true\r\n                  }\r\n                  API.updateUserMatch(response.data[i]._id, matchData).then((matchPutResponse) => {\r\n                      setOpenMatchModal(true)\r\n                      setModalMatchImage1(response.data[i].item1Photo)\r\n                      setModalMatchImage2(response.data[i].item2Photo)\r\n                  })\r\n              }\r\n          }\r\n      })\r\n    }\r\n  }, 5000)\r\n\r\n  function deleteItem() {\r\n    API.deleteItem(modalID).then((res) => {\r\n      setOpenRateModal(true)\r\n    })\r\n  }\r\n\r\n  function keepItem() {\r\n    const updatedItem = {\r\n      deleteItem: false\r\n    }\r\n    API.updateItem(modalID, updatedItem).then((res) => {\r\n      setOpenRateModal(true)\r\n    })\r\n  }\r\n\r\n  function submitRating() {\r\n    API.getUser(deletedItemUserId).then((res) => {\r\n      console.log(res.data[0].rating)\r\n      const ratingArray = res.data[0].rating\r\n      ratingArray.push(rating)\r\n      const newUserRating = {\r\n          rating: ratingArray\r\n      }\r\n      API.updateUser(deletedItemUserId, newUserRating).then((res) => {\r\n          window.location.reload();\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CustomNavbar></CustomNavbar>\r\n      <Route exact path=\"/\" component={Welcome} />\r\n      <Route path=\"/profile/:id\" component={Profile} />\r\n      <Route exact path=\"/createItem/:id\" component={createItem} />\r\n      <Route exact path=\"/swipping/:item/:id\" component={Swipping} />\r\n      <Route exact path=\"/chat/:id\" component={Chat} />\r\n      {window.location.pathname.includes('/chat/') ? null : <CustomFooter />}  \r\n      {/* Modal for when other user presses 'swap items' button */}\r\n      <Modal\r\n        open={openSwapModal}\r\n        className='center-align'\r\n        actions={[]}\r\n        options={{\r\n          dismissible: false\r\n        }}>\r\n        <h3>Warning</h3>\r\n        <img src={modalImage} className=\"circle swapItemImage\"></img>\r\n        <br></br>\r\n        <div>Another user has alerted us that you have swapped items with them.</div>\r\n        <div>If you confirm, your item will be deleted from Swapify.</div>\r\n        <div>If you deny, you can continue swapping with your item.</div>\r\n        <br></br>\r\n        <a><Button onClick={deleteItem} modal=\"close\">Confirm</Button></a>\r\n        <br></br><br></br>\r\n        <a><Button onClick={keepItem} modal=\"close\">Deny</Button></a>\r\n      </Modal>\r\n      {/* Match Alert Modal */}\r\n      <Modal\r\n        open={openMatchModal}\r\n        className='center-align'\r\n        >\r\n        <h3>You have a new Match!</h3>\r\n        <img src={modalMatchImage1} className=\"circle swapItemImage\"></img>\r\n        <img src={modalMatchImage2} className=\"circle swapItemImage\"></img>\r\n        <br></br>\r\n        <div>Go to the Chat Page to make the swap!</div>\r\n        <br></br>\r\n      </Modal>\r\n\r\n      {/* Rate User */}\r\n      <Modal\r\n          open={openRateModal}\r\n          className='center-align'\r\n          actions={[]}\r\n          options={{\r\n          dismissible: false\r\n          }}>\r\n          <h3>Match Deleted!</h3>\r\n          <br></br>\r\n          <div>Would you like to rate the other user?</div>\r\n          <br></br>\r\n          <Rating\r\n              emptySymbol={<i className=\"material-icons\">star_border</i>}\r\n              fullSymbol={<i className=\"material-icons\">star</i>}\r\n              onChange={(e) => setRating(e)}\r\n          ></Rating>\r\n          <br></br><br></br>\r\n          <a><Button onClick={submitRating} modal=\"close\">Submit Rating</Button></a>\r\n          <br></br><br></br>\r\n          <a><Button modal=\"close\">No Thanks</Button></a>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport 'materialize-css';\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css/dist/js/materialize.min.js'\r\n\r\nReactDOM.render(<React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n</React.StrictMode>, document.getElementById(\"root\"));\r\nregisterServiceWorker();"],"sourceRoot":""}